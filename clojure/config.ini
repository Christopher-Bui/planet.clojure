# Planet configuration file
#
# This illustrates some of Planet's fancier features with example.

# Every planet needs a [Planet] section
[Planet]
# name: Your planet's name
# link: Link to the main page
# owner_name: Your name
# owner_email: Your e-mail address
name = Planet Clojure
link = http://planet.clojure.in/
owner_name = Baishampayan Ghose
owner_email = b.ghose@gmail.com

# cache_directory: Where cached feeds are stored
# new_feed_items: Number of items to take from new feeds
# log_level: One of DEBUG, INFO, WARNING, ERROR or CRITICAL
# feed_timeout: number of seconds to wait for any given feed
cache_directory = clojure/cache
new_feed_items = 2
log_level = DEBUG
feed_timeout = 20

# template_files: Space-separated list of output template files
template_files = clojure/index.html.tmpl clojure/atom.xml.tmpl
# clojure/rss20.xml.tmpl clojure/rss10.xml.tmpl clojure/opml.xml.tmpl clojure/foafroll.xml.tmpl

# filters
# filter = (clojure|\(def |\(defn-? )

# The following provide defaults for each template:
# output_dir: Directory to place output files
# items_per_page: How many items to put on each page
# days_per_page: How many complete days of posts to put on each page
#                This is the absolute, hard limit (over the item limit)
# date_format: strftime format for the default 'date' template variable
# new_date_format: strftime format for the 'new_date' template variable
# encoding: output encoding for the file, Python 2.3+ users can use the
#           special "xml" value to output ASCII with XML character references
# locale: locale to use for (e.g.) strings in dates, default is taken from your
#         system. You can specify more locales separated by ':', planet will
#         use the first available one
output_dir = clojure/output
items_per_page = 10
days_per_page = 7
date_format = %B %d, %Y %I:%M %p
new_date_format = %B %d, %Y
encoding = utf-8
# locale = C


# To define a different value for a particular template you may create
# a section with the same name as the template file's filename (as given
# in template_files).
# Provide no more than 7 days articles on the front page
[clojure/index.html.tmpl]
days_per_page = 7

# If non-zero, all feeds which have not been updated in the indicated
# number of days will be marked as inactive
activity_threshold = 0


# Options placed in the [DEFAULT] section provide defaults for the feed
# sections.  Placing a default here means you only need to override the
# special cases later.
[DEFAULT]
# Hackergotchi default size.
# If we want to put a face alongside a feed, and it's this size, we
# can omit these variables.
facewidth = 65
faceheight = 85


# Any other section defines a feed to subscribe to.  The section title
# (in the []s) is the URI of the feed itself.  A section can also be
# have any of the following options:
#
# name: Name of the feed (defaults to the title found in the feed)
#
# Additionally any other option placed here will be available in
# the template (prefixed with channel_ for the Items loop).  We use
# this trick to make the faces work -- this isn't something Planet
# "natively" knows about.  Look at fancy-examples/index.html.tmpl
# for the flip-side of this.

[http://clojure.wladyka.eu/feed.xml]
name = Krzysztof Wladyka

[http://www.bestinclass.dk/feed]
name = Lau B. Jensen
filter = (clojure|\(def |\(defn-? )

[http://feeds.feedburner.com/ClojureAndMe]
name = Christophe Grand

[http://clojure-lab.tumblr.com/rss]
name = Clojure lab

#[http://freegeek.in/blog/tag/clojure/feed/]
#name = Baishampayan Ghose

[http://clojure.blogspot.com/feeds/posts/default]
name = Rich Hickey

[http://briancarper.net/feed]
name = Brian Carper
filter = (clojure|\(def |\(defn-? )

[http://travis-whitton.blogspot.com/feeds/posts/default/-/clojure]
name = Travis Whitton

[http://data-sorcery.org/feed/]
name = Incanter: Data Sorcery with Clojure

[http://feeds2.feedburner.com/StuartSierra]
name = Stuart Sierra

[http://technomancy.us/feed/atom.xml]
name = Phil Hagelberg

[http://blog.fogus.me/feed/]
name = Michael Fogus
filter = (clojure|\(def |\(defn-? )

[http://s-expressions.com/tag/clojure/feed/]
name = Amit Rathore

[http://bitumenframework.blogspot.com/feeds/posts/default]
name = Shantanu Kumar
filter = (clojure|\(def |\(defn-? )

[http://charsequence.blogspot.com/feeds/posts/default]
name = Shantanu Kumar
filter = (clojure|\(def |\(defn-? )

[http://onclojure.com/feed/atom/]
name = On Clojure

#[http://blog.higher-order.net/category/clojure/feed/]
#name = Karl Krukow

[http://timothypratley.blogspot.com/feeds/posts/default]
name = Timothy Pratley

[http://nakkaya.com/rss-feed]
name = Nurullah Akkaya
filter = (clojure|\(def |\(defn-? )

# http://feeds.feedburner.com/MiredInCode
[http://blog.mired.org/feeds/posts/default/-/clojure]
name = Mike Meyer

[http://blog.n01se.net/?cat=14&feed=rss2&author=3]
name = Searching for Signal

[http://gnuvince.wordpress.com/tag/clojure/feed/]
name = Vincent Foley

[http://clojurestudydc.wordpress.com/feed/]
name = Clojure Study Group DC

[http://ericlavigne.wordpress.com/feed/]
name = Eric Lavigne

[http://feeds.feedburner.com/w01fe]
name = Jason Wolfe

[http://cemerick.com/category/clojure/feed/]
name = Chas Emerick

[http://mostlylazy.com/feed/]
name = Mostly λazy…a Clojure podcast

[http://jakemccrary.com/blog/categories/clojure/]
name = Jake McCrary

[http://whollyweirdwyrd.blogspot.com/feeds/posts/default/-/clojure]
name = Nicolas Buduroi

[http://meshy.org/atom.xml]
name = Alex Osborne

[http://feeds.feedburner.com/disclojure]
name = Toni Batchelli

[http://vimeo.com/channels/fulldisclojure/videos/rss]
name = Sean Devlin (vimeo)

[http://ianp.org/categories/clojure/atom.xml]
name = Ian Phillips

[http://zef.me/tag/clojure/feed]
name = Zef Hemel

[http://dialectical-computing.de/blog/clojure.xml]
name = Kototama

[http://kotka.de/blog/index.rss]
name = Meikel Brandmeyer

[http://alexott.blogspot.com/feeds/posts/default/-/clojure]
name = Alex Ott

[http://paul.stadig.name/feeds/posts/default/-/clojure]
name = Paul Stadig

[http://netzhansa.blogspot.com/feeds/posts/default/-/clojure]
name = Netzhansa

[http://writingcoding.blogspot.com/feeds/posts/default/-/clojure]
name = Writing/Coding

[http://programming-puzzler.blogspot.com/feeds/posts/default]
name = Thoughts on Programming

[http://www.michaelharrison.ws/weblog/?cat=26&feed=rss2]
name = Michael Harrison

[http://items.sjbach.com/feed]
name = Stephen Bach

[http://pipes.yahoo.com/pipes/pipe.run?_id=bb5649628a7f97318cb84845387521ef&_render=rss]
name = Bradford Cross
filter = (clojure|\(def |\(defn-? )

[http://technomancy.us/feed/atom.xml]
name = Phil Hagelberg

[http://feeds2.feedburner.com/LispCast]
name = LispCast

[http://tohono.blogspot.com/feeds/posts/default/-/Clojure]
name = Tom Hicks

[http://citizen428.net/blog/categories/clojure/atom.xml]
name = Michael Kohl

[http://objectcommando.com/blog/category/clojure/feed/]
name = Object Commando

[http://www.paullegato.com/blog/tag/clojure/feed/]
name = Paul Legato

[http://feeds.feedburner.com/wq-clojure]
name = :wq - blog

[http://mischneider.net/?cat=4&feed=rss2]
name = Michael Schneider

[http://davidrupp.blogspot.com/feeds/posts/default/-/clojure]
name = David Rupp

#[http://clojure.higher-order.net/?feed=rss2]
#name = Danish Clojure Users Group

[http://hugoduncan.org/tags/clojure/index.xml]
name = Hugo Duncan

#[http://formpluslogic.blogspot.com/feeds/posts/default]
#name = Form plus Logic

[http://blog.danieljanus.pl/blog/categories/clojure/atom.xml]
name = Daniel Janus

[http://www.viksit.com/?s=clojure&feed=rss2]
name = Viksit Gaur

[http://blog.markwatson.com/feeds/posts/default/-/Clojure]
#[http://pipes.yahoo.com/pipes/pipe.run?_id=a0161f6185ca965613735b6b06f2e3ef&_render=rss]
name = Mark Watson
filter = (clojure|\(def |\(defn-? )

[http://community.livejournal.com/clojure/data/atom]
name = Clojure@LJ

# http://nathanmarz.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=180af42010b57c605f7b7475b311ec32&_render=rss]
name = Nathan Marz
filter = (clojure|\(def |\(defn-? )

#[http://debasishg.blogspot.com/feeds/posts/default/-/clojure]
[http://pipes.yahoo.com/pipes/pipe.run?_id=e35d6881f8ced55bed527c7a501fad8d&_render=rss]
name = Debasish Ghosh
filter = (clojure|\(def |\(defn-? )

[http://blog.jayfields.com/feeds/posts/default/-/clojure]
name = Jay Fields

# http://blog.ethanjfast.com
[http://pipes.yahoo.com/pipes/pipe.run?_id=d94e22665db7b53538a400bfaca88e86&_render=rss]
name = Ethan Fast
filter = (clojure|\(def |\(defn-? )

[http://mmcgrana.github.io/atom.xml]
name = Mark McGranaghan
filter = (clojure|\(def |\(defn-? )

[http://ideolalia.com/rss.xml]
name = Zach Tellman
filter = (clojure|\(def |\(defn-? )

# http://m.3wa.com/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=26da0ac0c1dfbda95eb27a1b4c49be89&_render=rss]
#name = wmacgyver
#filter = (clojure|\(def |\(defn-? )

[http://arohner.blogspot.com/feeds/posts/default/-/clojure]
name = Allen Rohner

[https://clivetong.wordpress.com/feed/]
name = Clive Tong
filter = (clojure|\(def |\(defn-? )

[http://codemonkeyism.com/feed/]
name = Stephan Schmidt
filter = (clojure|\(def |\(defn-? )

[http://www.gregosuri.com/feed.xml]
name = Greg Osuri
filter = (clojure|\(def |\(defn-? )

[http://www.infoq.com/rss/rss.action?token=u3wbDvo4lRit0lRZ5R0mBZXQR13FuTlA]
name = Clojure at InfoQ
filter = (clojure|\(def |\(defn-? )

[http://fightcodeentropy.com/?cat=6&feed=rss2]
name = Fight Code Entropy
filter = (clojure|\(def |\(defn-? )

[http://blog.licenser.net/atom.xml]
name = Lice!
filter = (clojure|\(def |\(defn-? )

[http://www.hackers-with-attitude.com/feeds/posts/default]
name = hackers-with-attitude
filter = (clojure|\(def |\(defn-? )

[http://mark.reid.name/blog/atom.xml]
name = Mark Reid
filter = (clojure|\(def |\(defn-? )

[http://www.deepbluelambda.org/index.rss]
name = Deep Blue Lambda
filter = (clojure|\(def |\(defn-? )

#[http://www.haltingproblem.net/weblog/tags/tech/clojure/feed/]
[http://latebound.posterous.com/rss.xml?tag=clojure]
name = Roland Sadowski

[http://spin.atomicobject.com/feed/]
name = Atomic Spin
filter = (clojure|\(def |\(defn-? )

[http://www.lshift.net/blog/feed/]
name = LShift Ltd.
filter = (clojure|\(def |\(defn-? )

# http://ktuman.blogspot.com/
[http://feeds.feedburner.com/KeepItSimplySimple]
name = Keep IT Simply Simple
filter = (clojure|\(def |\(defn-? )

[https://www.innoq.com/blog/st/atom.xml]
name = Stefan Tilkov
filter = (clojure|\(def |\(defn-? )

[http://feeds.feedburner.com/prodevtips/LVkG]
name = ProDevTips
filter = (clojure|\(def |\(defn-? )

[http://nklein.com/feed/]
name = Patrick Stein
filter = (clojure|\(def |\(defn-? )

[http://lispjobs.wordpress.com/category/clojure/feed/]
name = Clojure Jobs

[http://weakreference.blogspot.com/feeds/posts/default/-/clojure]
name = The Weak Reference

[http://www.sids.in/blog/feed/]
name = Siddhartha Reddy
filter = (clojure|\(def |\(defn-? )

# http://pparkkin.info -> parked page
#name = Paavo Anselmi Parkkinen
#filter = (clojure|\(def |\(defn-? )

[http://messynotebook.com/?cat=30&feed=rss2]
name = Thomas Kjeldahl Nilsson

[http://blog.mitechki.net/feeds/posts/default/-/clojure]
name = Dmitriy Kropivnitskiy

[http://feeds.feedburner.com/CompojureOnGAE]
name = Compojure on GAE

[https://www.petekeen.net/index.xml]
name = Bugsplat
filter = (clojure|\(def |\(defn-? )

[http://pramode.net/clojure/feed/atom.xml]
name = Pramode C.E

#[http://feeds2.feedburner.com/TimRiddell]
#name = Tim Riddell
#filter = (clojure|\(def |\(defn-? )

[http://skuro.tk/category/developer/clojure/feed]
name = Carlo Sciolla

[http://jng.imagine27.com/index.php/feed]
name = Imagine27
filter = (clojure|\(def |\(defn-? )

[http://orthogonal.me/category/clojure/feed/]
name = Glen Stampoultzis

[http://toinfinity.wordpress.com/category/coding/clojure/feed/]
name = Infinity: Easier Than You Think. Infinitely.

[http://joost.zeekat.nl/category/clojure/feed/]
name = code.h(oe)kje

[http://tech.puredanger.com/?cat=133&feed=rss2]
name = Alex Miller

[http://carpathia.blogspot.com/feeds/posts/default]
name = Edgar Gonçalves
filter = (clojure|\(def |\(defn-? )

[http://www.chadbraunduin.com/feeds/posts/default]
name = Chad Braun-Duin
filter = (clojure|\(def |\(defn-? )

[http://kirindave.tumblr.com/rss]
name = This Window: Close It
filter = (clojure|\(def |\(defn-? )

# wrong address on site
#[http://blog.objectmentor.com/xml/atom/feed.xml]
#name = Object Mentor
#filter = (clojure|\(def |\(defn-? )

[https://sustainablecode.wordpress.com/feed/]
name = Sustainable Code

[http://asymmetrical-view.com/atom.xml]
name = Kyle Burton
filter = (clojure|\(def |\(defn-? )

[http://wmfarr.blogspot.com/feeds/posts/default]
name = Will Farr
filter = (clojure|\(def |\(defn-? )

[http://codemeself.blogspot.com/feeds/posts/default/-/clojure]
name = Hubert Iwaniuk

[http://codeabout.blogspot.com/feeds/posts/default/-/clojure]
name = Codeabout

[http://www.ccri.com/feed/]
name = CCRi
filter = (clojure|\(def |\(defn-? )

[http://epistemologicalengineering.blogspot.com/feeds/posts/default]
name = Epistemological Engineering
filter = (clojure|\(def |\(defn-? )

[http://www.exampler.com/blog/category/clojure/feed/]
name = Exploration Through Example

[http://read-eval-puke.blogspot.com/feeds/posts/default]
name = Read-Eval-Puke

[http://devender.wordpress.com/tag/clojure/feed/]
name = Devender Gollapally

[http://feeds.dzone.com/java]
name = Javalobby
filter = (clojure|\(def |\(defn-? )

[http://www.dalnefre.com/wp/tag/clojure/feed/]
name = "It's Actors All The Way Down"

[http://blog.magpiebrain.com/category/development/languages-frameworks/clojure-languages-frameworks-development/feed/]
name = Sam Newman

[http://jondotcomdotorg.net/tag/clojure/feed/]
name = Jon Bristow

[http://saaientist.blogspot.com/feeds/posts/default/-/clojure]
name = Saaien Tist

[http://corfield.org/blog/feeds/rss.cfm/category/clojure]
name = "An Architect's View"

[https://www.taoeffect.com/blog/feed/]
name = Greg Slepak
filter = (clojure|\(def |\(defn-? )

[http://david-mcneil.com/rss]
name = David McNeil
filter = (clojure|\(def |\(defn-? )

[http://revolucionlibrary.wordpress.com/tag/clojure/feed/]
name = Željko Ziriković

[http://swannodette.github.io/atom.xml]
name = David Nolen

[http://michaeldrogalis.github.io/feed.xml]
name = Michael Drogalis

[http://blog.rguha.net/?tag=clojure&feed=rss2]
name = So much to do, so little time

[http://feeds2.feedburner.com/ZenAndTheArtOfRubyProgramming]
name = Zen and the Art of Programming
filter = (clojure|\(def |\(defn-? )

[http://squirrel.pl/blog/tag/clojure/feed/]
name = Squirrel

[http://herdrick.tumblr.com/rss]
name = Ethan Herdrick
filter = (clojure|\(def |\(defn-? )

[http://jeroenvloothuis.blogspot.com/feeds/posts/default/-/clojure]
name = Jeroen Vloothuis

[http://rubylearning.com/blog/tag/clojure/feed/]
name = RubyLearning Blog

[http://twoguysarguing.wordpress.com/category/clojure/feed/]
name = Two Guys Arguing

[http://feeds.feedburner.com/PlayWithTheMachine]
name = Gavin McGovern
filter = (clojure|\(def |\(defn-? )

[http://community.ative.dk/blogs/ative/rss.aspx?Tags=clojure&AndTags=1]
name = Ative at Work

[http://blog.dpritchett.net/rss]
name = Daniel J. Pritchett
filter = (clojure|\(def |\(defn-? )

[http://willgroppe.tumblr.com/rss]
name = William Groppe
filter = (clojure|\(def |\(defn-? )

[http://fulldisclojure.blogspot.com/feeds/posts/default]
name = Sean Devlin

# http://www.xcombinator.com/feed/
[http://feeds.feedburner.com/xcombinator]
name = X-combinator
filter = (clojure|\(def |\(defn-? )

[http://metaljoe.wordpress.com/category/clojure/feed/]
name = "John's Coding Reflections"

[http://feeds.feedburner.com/fatvat]
name = Jeff Foster
filter = (clojure|\(def |\(defn-? )

[http://techbehindtech.com/category/clojure/feed/]
name = Siva Jagadeesan

[http://blog.remvee.net/category/clojure/rss.xml]
name = "Remco van 't Veer"

[http://videlalvaro.github.io/atom.xml]
name = Alvaro Videla
filter = (clojure|\(def |\(defn-? )

[http://www.learningclojure.com/feeds/posts/default]
name = Learning Clojure

# TODO: re-check
[http://blog.trydionel.com/tag/clojure/feed/]
name = Jeff Tucker

[http://jukkaz.wordpress.com/tag/clojure/feed/]
name = Jukka Zitting

[https://antoniogarrote.wordpress.com/feed/]
name = opus artificem probat
filter = (clojure|\(def |\(defn-? )

[http://erl.nfshost.com/category/languages/clojure/feed/]
name = David Cabana

[http://otfrom.wordpress.com/tag/clojure/feed/]
name = Bruce Durling

[http://blog.raynes.me/atom.xml]
name = Raynes

[http://aria42.com/feed.xml]
name = Stuff Aria Likes
filter = (clojure|\(def |\(defn-? )

[http://feeds2.feedburner.com/Pseudofish]
name = pseudofish
filter = (clojure|\(def |\(defn-? )

[http://hiim.tv/clojure/atom.xml]
name = Travis Vachon Writes About Clojure

[http://slyrus.github.io/atom.xml]
name = Cyrus Harmon
filter = (clojure|\(def |\(defn-? )

[http://maurits.wordpress.com/category/clojure/feed/]
name = Maurits Rijk

[http://jkkramer.wordpress.com/category/clojure/feed/]
name = Justin Kramer

#[http://clojure.com/blog/atom.xml]
[http://feeds.feedburner.com/Clojure/coreBlog]
name = Clojure/core

[http://matthewm.net/blog/tag/clojure/feed/]
name = Matthew Maravillas

[http://blog.darevay.com/tag/clojure/feed/]
name = Dave Ray

[http://feeds.feedburner.com/Cleancode]
name = Mikael Sundberg
filter = (clojure|\(def |\(defn-? )

[http://sbtourist.blogspot.com/feeds/posts/default/-/clojure]
name = Sergio Bossa

[http://sigusr2.net/tags/clojure.xml]
name = Andrew Gwozdziewycz

[http://clojuredocs.wordpress.com/category/clojure/feed/]
name = ClojureDocs

[http://kylecordes.com/tag/clojure/feed]
name = Kyle Cordes

#[http://blog.bensmann.com/rss.xml?tag=clojure]
[http://blog.art-of-coding.eu/tag/clojure/feed/]
name = Ralf Bensmann

[http://clojurecljub.wordpress.com/feed/]
name = St. Louis Clojure Discussion Group

[http://blog.samibadawi.com/feeds/posts/default/-/Clojure]
name = Sami Badawi

[http://ilyasterin.com/blog/tag/clojure/feed]
name = Ilya Sterin

[http://pepijndevos.nl/atom.xml]
name = Pepijn de Vos
filter = (clojure|\(def |\(defn-? )

# http://feeds.feedburner.com/anvilio
# http://anvil.io/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=237a83c4a866269a29172b6b187470df&_render=rss]
#name = Christian Smith
#filter = (clojure|\(def |\(defn-? )

[http://gearon.blogspot.com/feeds/posts/default]
name = Paul Gearon
filter = (clojure|\(def |\(defn-? )

[http://feeds.feedburner.com/lousycoder]
name = Min Huang
filter = (clojure|\(def |\(defn-? )

# site isn't available
# http://tom.schutzer-weissmann.net/feed/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=68c540caa8931b5b8bae2952cc346565&_render=rss]
#name = Tom Schutzer-Weissmann
# filter = (clojure|\(def |\(defn-? )

# http://agravier.blogspot.com/
# name = Alexandre Gravier

[http://www.brool.com/index.php/category/coding/clojure-coding/feed]
name = Tim Lopez

# TODO: find
# http://rubester.posterous.com/rss.xml
# name = Glen Rubin
# filter = (clojure|\(def |\(defn-? )

[http://boss-level.com/?tag=clojure&feed=rss2]
name = Edmund Jackson

[http://blog.isaachodes.io/feed.xml]
name = Isaac Hodes
filter = (clojure|\(def |\(defn-? )

[http://bad-concurrency.blogspot.com/feeds/posts/default]
name = Michael Barker
filter = (clojure|\(def |\(defn-? )

[http://vitalyper.wordpress.com/feed/]
name = Vitaly Peressada
filter = (clojure|\(def |\(defn-? )

[http://clojure.roboloco.net/?feed=rss2]
name = Clojure Companion Cube

[http://szamitogepesnyelveszet.blogspot.com/feeds/posts/default/-/Clojure]
name = Számítógépes nyelvészet

[http://feeds.threebrothers.org/threebrothers/brendan]
name = Brendan Ribera
filter = (clojure|\(def |\(defn-? )

[http://blog.8thlight.com/feed/atom.xml]
name = 8thlight Inc.
filter = (clojure|\(def |\(defn-? )

[http://blog.twonegatives.com/rss]
name = Two Negatives Blog
filter = (clojure|\(def |\(defn-? )

[https://www.ibm.com/developerworks/mydeveloperworks/bookmarks/atom?base=%25http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Flibrary%2F%25&sortBy=created&sortOrder=desc&tag=clojure&lang=en]
name = Clojure at IBM developerWorks

[http://chopmode.wordpress.com/category/clojure/feed/]
name = Jacob Poulsgaard Tjørnholm

# http://blog.gaz-jones.com
#[http://pipes.yahoo.com/pipes/pipe.run?_id=df85b2ff2daf36efcd53792f789e00bf&_render=rss]
#name = Gaz Jones
#filter = (clojure|\(def |\(defn-? )

[http://clojurewise.blogspot.com/feeds/posts/default]
name = Miki Tebeka

[http://joshfinken.com/blog/atom.xml]
name = joshfinken
filter = (clojure|\(def |\(defn-? )

[http://feeds.feedburner.com/suprematic]
name = Alexey Aristov
filter = (clojure|\(def |\(defn-? )

# http://arcanesentiment.blogspot.com/
[http://feeds.feedburner.com/ArcaneSentiment]
name = Arcane Sentiment
filter = (clojure|\(def |\(defn-? )

[http://blog.japila.pl/feed/]
name = Jacek Laskowski
filter = (clojure|\(def |\(defn-? )

#[http://cynojure.posterous.com/rss.xml]
[http://kriyative.github.io/rss/clojure.xml]
name = Ram Krishnan

#TODO: https://ianeslick.com/
[http://ianeslick.com/feed/?tag=clojure]
name = Ian Eslick

[http://www.brainonfire.net/blog/feed/]
name = Tim McCormack
filter = (clojure|\(def |\(defn-? )

[http://steve.vinoski.net/blog/category/clojure/feed/]
name = Steve Vinoski

# http://dbostwick.posterous.com/
[http://dbostwick.posterous.com/rss.xml?tag=clojure]
name = Daniel Bostwick

[http://blog.factual.com/feed]
name = Factual dev blog
filter = (clojure|\(def |\(defn-? )

# http://amalloy.hubpages.com
#[http://pipes.yahoo.com/pipes/pipe.run?_id=2812173014387ce764fca0a58aa86576&_render=rss]
#name = amalloy

[http://www.enrico-franchi.org/feeds/posts/default/-/Clojure]
name = Enrico Franchi

[http://gigasquidsoftware.com/blog/categories/clojure/atom.xml]
name = Carin Meier

[http://willwhim.wordpress.com/category/clojure/feed/]
name = Will Fitzgerald

[http://lylejohnson.name/blog/category/clojure/feed/]
name = Lyle Johnson

[http://blog.experimentalworks.net/category/programming/clojure/feed/]
name = David Soria Parra

[http://vijaykiran.com/feed/]
name = Vijay Kiran
filter = (clojure|\(def |\(defn-? )

[http://justinsboringpage.blogspot.com/feeds/posts/default/-/clojure]
name = "justinhj's coding blog"

[https://brehaut.net/feeds/everything]
name = Andrew Brehaut
filter = (clojure|\(def |\(defn-? )

[http://blog.kartikshah.info/feeds/posts/default/-/clojure]
name = Kartik Shah

[http://michakurt.blogspot.com/feeds/posts/default/-/clojure]
name = Michael Krause

[http://jasonaeschliman.blogspot.com/feeds/posts/default/-/clojure]
name = Jason Aeschliman

[http://jon.is.emotionull.com/rss]
name = Jon Romero
filter = (clojure|\(def |\(defn-? )

[http://sexp.posterous.com/rss.xml?tag=clojure]
name = "sexp's posterous"

[http://blog.raek.se/category/clojure/feed/]
name = Rasmus Svensson

[http://blog.carsoncheng.ca/feeds/posts/default/-/Clojure]
name = Carson Cheng

[http://kuriqoo.blogspot.com/feeds/posts/default/-/clojure]
name = Christophe Verré

[http://www.adrianmouat.com/bit-bucket/feed/atom/]
name = Adrian Mouat
filter = (clojure|\(def |\(defn-? )

[http://randomcomputation.blogspot.com/feeds/posts/default]
name = random computation
filter = (clojure|\(def |\(defn-? )

# TODO: site isn't available - contact author
# http://icylisper.in/
[http://feeds2.feedburner.com/icylisper]
name = Isaac Praveen
filter = (clojure|\(def |\(defn-? )

[http://alfredodinapoli.wordpress.com/tag/clojure/feed/]
name = Alfredo Di Napoli

[http://functionaljobs.com/jobs/search/?q=clojure&format=rss]
name = Functional Jobs

[http://resatori.com/category/clojure/feed]
name = Michael Sappler

#[http://rob-rowe.blogspot.com/feeds/posts/default/-/Clojure]
[http://www.myclojureadventure.com/feeds/posts/default/-/Clojure]
name = Rob Rowe

[http://www.cataclysmicmutation.com/atom.xml]
name = Deon Garrett
filter = (clojure|\(def |\(defn-? )

# TODO: recheck
#[http://coreyhoffstein.com/tag/clojure/feed/]
#name = Corey Hoffstein

[http://reminiscential.wordpress.com/tag/clojure/feed/]
name = "Kevin 'Jing' Qiu"

# http://max-weber.tumblr.com
[http://feeds.feedburner.com/ClojureAndTheBusiness]
name = Max Weber

[http://swizec.com/blog/feed]
name = Swizec Teller
filter = (clojure|\(def |\(defn-? )

# http://kjeldahl.net/
# [http://pipes.yahoo.com/pipes/pipe.run?_id=a2d30487f61a012c6c3b699941f3197e&_render=rss]
#name = Marius Kjeldahl
# filter = (clojure|\(def |\(defn-? )

# TODO: re-check
# http://blog.sfalma.com/tagged/clojure
# name = Sfalma
# filter = (clojure|\(def |\(defn-? )

[http://7sudos.com/taxonomy/term/11/0/feed]
name = 7sudos

[http://jessehowarth.com/clojure.atom]
name = Jesse Howarth

[http://www.jayway.com/feed/]
name = Jayway team
filter = (clojure|\(def |\(defn-? )

[http://www.inerciasensorial.com.br/category/programacao/clojure/feed/]
name = Inércia Sensorial

[http://zianet.dk/blog/category/code/clojure/feed/]
name = Kristian Kristensen

# TODO: check later, or contact directly
# http://lifeisagraph.com
# name = Jeff Rose
# filter = (clojure|\(def |\(defn-? )

[http://mattiasholmqvist.se/category/programming/clojure-programming/feed/]
name = Mattias Holmqvist

[http://heuristic-fencepost.blogspot.com/feeds/posts/default]
name = Heuristic Fencepost
filter = (clojure|\(def |\(defn-? )

[http://www.brainshave.com/blog/index.xml
name = Szymon Witamborski
filter = (clojure|\(def |\(defn-? )

[http://blog.andrewvc.com/atom.xml]
name = Andrew Cholakian
filter = (clojure|\(def |\(defn-? )

[http://philipp.meier.name/blog/categories/clojure/atom.xml]
name = Philipp Meier

[http://ashenfad.blogspot.com/feeds/posts/default/-/clojure]
name = Too Many NumLumps

# Blog is discontinued
# http://lmf-ramblings.blogspot.com
# name = My Corner of the World
# filter = (clojure|\(def |\(defn-? )

# Site isn't available...
# [http://blog.altasoft.pl/tag/clojure/feed/]
# [http://nailthatbug.net/tag/clojure/feed/]
#name = Emil Kruczek

[http://clojure.lang.dk/?cat=3&feed=rss2]
name = Karsten Lang

# Site isn't available
# http://blackstag.com/blog
# [http://pipes.yahoo.com/pipes/pipe.run?_id=b632367883d51d21470d9ffcf5b7581c&_render=rss]
#name = The Blackstag Blog
# filter = (clojure|\(def |\(defn-? )

# http://www.colourcoding.net/blog/Default.aspx
[http://feeds.colourcoding.net/ColourCoding]
name = Colour Coding
filter = (clojure|\(def |\(defn-? )

[http://christophermaier.name/atom.xml]
name = Christopher Maier
filter = (clojure|\(def |\(defn-? )

[http://blog.malcolmsparks.com/?feed=rss2]
name = Malcolm Sparks

[http://www.theoryinpractice.net/rss]
name = Theory In Practise
filter = (clojure|\(def |\(defn-? )

# Site isn't available...
# http://onycloud.com/atom.xml
# name = OnyCloud
# filter = (clojure|\(def |\(defn-? )

# http://blog.orderharmony.com/
[http://feeds.feedburner.com/OrderharmonyBlog]
name = OrderHarmony
filter = (clojure|\(def |\(defn-? )

[http://thinkrelevance.com/blog/atom.xml]
name = "Relevance Inc.'s blog"
filter = (clojure|\(def |\(defn-? )

[https://blog.hdurer.net/index.xml]
name = Holger Durer
filter = (clojure|\(def |\(defn-? )

[http://rmoritz.github.io/feed.xml]
name = Ralph Moritz
filter = (clojure|\(def |\(defn-? )

[http://nounsvsverbs.blogspot.com/feeds/posts/default/-/clojure]
name = Daniel Glauser

[http://www.markhneedham.com/blog/category/clojure/feed/]
name = Mark Needham

[http://feeds.feedburner.com/palletops]
name = Pallet blog

# No feed anymore
# http://brianmckenna.org/blog/
#name = Brian McKenna
#filter = (clojure|\(def |\(defn-? )

[http://justyouraveragehacker.wordpress.com/category/clojure/feed/]
name = Thomas Karolski

[http://drknucklehead.wordpress.com/category/clojure/feed/]
name = Dr. Knucklehead

[http://www.unlimitednovelty.com/feeds/posts/default/-/clojure]
name = Tony Arcieri

[http://pupeno.com/tag/clojure/feed/]
name = J. Pablo Fernández

[http://rrees.me/tag/clojure/feed/]
name = Robert Rees

[http://oobaloo.co.uk/posts.atom]
name = Paul Ingles
filter = (clojure|\(def |\(defn-? )

[http://sunng.info/blog/blog/categories/clojure/atom.xml]
name = Sun Ning

[http://charlie.griefer.com/blog/category/clojure/feed/]
name = Charlie Griefer

[http://www.cassiel.com/tag/clojure/feed/]
name = Cassiel

[http://spootnik.org/index.xml]
name = Pierre-Yves Ritschard
filter = (clojure|\(def |\(defn-? )

# http://recursivity.com/blog/
[http://feeds.feedburner.com/RecursivityBlog]
name = Wille Faler
filter = (clojure|\(def |\(defn-? )

# http://ubercode.de/
[http://feeds.feedburner.com/ubercode]
name = Felix Dahlke
filter = (clojure|\(def |\(defn-? )

[http://def-learn.blogspot.com/feeds/posts/default/-/clojure]
name = Kevin Hostelley

[http://nickmudge.info/rssfeed.php]
name = Nick Mudge
filter = (clojure|\(def |\(defn-? )

#[http://tm.durusau.net/?cat=261&feed=rss2]
#name = Patrick Durusau

# http://blog.dhananjaynene.com
[http://feeds.feedburner.com/var/log/mind]
name = Dhananjay Nene
filter = (clojure|\(def |\(defn-? )

# http://fronx.posterous.com
# [http://pipes.yahoo.com/pipes/pipe.run?_id=a7ec736f326bf83b55a866ec49c48925&_render=rss]
#name = fronx
# filter = (clojure|\(def |\(defn-? )

[http://www.bytopia.org/tags/clojure/rss-feed]
name = Alex Yakushev

# http://www.philcalcado.com/tags/clojure/
[http://philcalcado.com/feed]
name = "Phil Calçado"
filter = (clojure|\(def |\(defn-? )

[http://patterngazer.blogspot.com/feeds/posts/default/-/clojure]
name = Globulon

[http://tsdh.wordpress.com/category/lisp/clojure-lisp/feed/]
name = Tassilo Horn

# site isn't available
# http://www.andrewwhitehouse.com/journal/
#name = Andrew Whitehouse
#filter = (clojure|\(def |\(defn-? )

# site isn't available
# http://jaydonnell.com/blog/categories/Clojure/
# name = "Danny 'Jay' Donnell"
# filter = (clojure|\(def |\(defn-? )

[http://www.pawfal.org/dave/blog/category/clojure/feed/]
name = Dave Griffiths

[http://notesonclojure.blogspot.com/feeds/posts/default]
name = Matt Clark
filter = (clojure|\(def |\(defn-? )

# http://thecarefulprogrammer.blogspot.com
[http://thecarefulprogrammer.blogspot.com/feeds/posts/default/-/Clojure]
name = Jeff Heon

#http://clojure-yap.blogspot.com/
[http://clojure-yap.blogspot.com/feeds/posts/default]
name = Mark Nutter

[http://earthly-powers.blogspot.com/feeds/posts/default/-/clojure]
name = Paul Sandoz

[http://clojureclr.blogspot.com/feeds/posts/default]
name = ClojureCLR

[http://immutant.org/news.atom]
name = Immutant

[http://clojurewest.org/news/atom.xml]
name = Clojure/West Conference

[http://blog.yieldbot.com/rss.xml?tag=clojure]
name = The Yieldbot Blog

[http://rhebus.posterous.com/rss.xml?tag=clojure]
name = Philip Potter

[http://www.sauria.com/blog/tag/clojure/feed/]
name = Ted Leung

[http://thinkrevoactevo.blogspot.com/feeds/posts/default/-/clojure]
name = Herwig Hochleitner

[http://martintrojer.github.io/clojure-feed.xml]
name = Martin Trojer

[http://yokolet.blogspot.com/feeds/posts/default]
name = Yoko Harada
filter = (clojure|\(def |\(defn-? )

# http://www.pgrs.net/
[http://feeds2.feedburner.com/pgrs]
name = Paul Gross
filter = (clojure|\(def |\(defn-? )

[http://www.pixelmachine.org/clojure.rss]
name = Ben Hughes

# http://peteriserins.com/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=b91b982d225d86cda9278274c6f709d2&_render=rss]
#name = Peteris Erins
#filter = (clojure|\(def |\(defn-? )

[http://www.eddology.com/feeds/posts/default]
name = Edd Dumbill
filter = (clojure|\(def |\(defn-? )

[http://lukevanderhart.com/atom.xml]
name = Luke VanderHart
filter = (clojure|\(def |\(defn-? )

[http://blog.milehighcode.com/feeds/posts/default/-/clojure]
name = Mile High Code
filter = (clojure|\(def |\(defn-? )

[http://twitch.nervestaple.com/feed.xml]
name = Christopher Miles
filter = (clojure|\(def |\(defn-? )

[http://blog.dgrnbrg.com/rss]
name = dgrnbrg
filter = (clojure|\(def |\(defn-? )

[https://blog.rjmetrics.com/feed/]
name = RJMetrics
filter = (clojure|\(def |\(defn-? )

[http://onbeyondlambda.blogspot.com/feeds/posts/default]
name = On Beyond Lambda
filter = (clojure|\(def |\(defn-? )

[http://icyrock.com/blog/tag/clojure/feed/]
name = icyrock

[http://clojurelx.blogspot.com/feeds/posts/default]
name = "Clojure & lx"

[http://juliangamble.com/blog/category/clojure/feed/]
name = Cool Pacific

[http://blog.isabel-drost.de/categories/clojure.xml]
name = Inductive Bias

[http://www.clojure.net/atom.xml]
name = Jim Duey

[http://oblong-code.blogspot.com/feeds/posts/default/-/clojure]
name = The Oblong

[https://biesnecker.com/atom.xml]
name = John Biesnecker
filter = (clojure|\(def |\(defn-? )

# http://djhworld.github.com/atom.xml
# name = Daniel Harper
# filter = (clojure|\(def |\(defn-? )

[http://jr0cket.co.uk/tags/clojure/]
name = jr0cket - community developer

[http://www.beaconhill.com/blog/?tag=clojure&feed=rss2]
name = Brad Lucas

[http://fsteeg.com/tag/clojure/feed/]
name = Fabian Steeg

[http://feeds.feedburner.com/ChrisGranger]
name = Chris Granger

# http://esdee.github.com
# Note: pipe is created, but summary is too short...
[http://esdee.github.io/feed/index.xml]
name = Shashy Dass

[http://clojuresoft.com/feed]
name = "Clojuresoft"

[http://tonsky.me/blog/atom.xml]
name = Nikita Prokopov
filter = (clojure|\(def |\(defn-? )

# http://alan.dipert.org/
# http://alandipert.tumblr.com
#name = Alan Dipert
#filter = (clojure|\(def |\(defn-? )

# http://sw1nn.com/
[http://feeds.feedburner.com/sw1nn]
name = Neale Swinnerton
filter = (clojure|\(def |\(defn-? )

[http://thegeez.net/atom.xml]
name = Gijs Stuurman

[http://www.jeditoolkit.com/atom.xml]
name = Irakli Gozalishvili
filter = (clojure|\(def |\(defn-? )

[http://www.chaomancy.com/blog/rss.xml?categoryId=6606561]
name = Nicolas Duchenne

[http://www.stathis.co.uk/atom.xml]
name = Stathis Sideris
filter = (clojure|\(def |\(defn-? )

# http://prompt.sh
# name = Clinton R. Nixon
# filter = (clojure|\(def |\(defn-? )

[http://paudo.posterous.com/rss.xml?tag=clojure]
name = Paudi Moriarty

[http://www.elangocheran.com/blog/category/programming/clojure/feed/]
name = Elango Cheran

[http://bcbio.wordpress.com/tag/clojure/feed/]
name = Brad Chapman

[http://paulosuzart.github.io/blog/categories/clojure/atom.xml]
name = Paulo Suzart

[https://variadic.me/rss.xml]
name = Erik Akron
filter = (clojure|\(def |\(defn-? )

[http://isti.bitbucket.org/atom.xml]
name = ISTI Off the Record
filter = (clojure|\(def |\(defn-? )

# http://www.dustingetz.com/feed.xml
# name = Dustin Getz
# filter = (clojure|\(def |\(defn-? )

[http://blog.getprismatic.com/rss/]
name = Prismatic
filter = (clojure|\(def |\(defn-? )

[https://khinsen.wordpress.com/feed/]
name = Konrad Hinsen
filter = (clojure|\(def |\(defn-? )

[http://www.lispplusplus.com/categories/clojure/atom.xml]
name = Alex Baranosky

[http://clojure-py.blogspot.com/feeds/posts/default]
name = Clojure-Py

[http://clojure-and-me.blogspot.co.uk/feeds/posts/default]
name = (+ clojure me)

[http://www.niclas-meier.de/category/technology/clojure/feed/]
name = Niclas Meier

[http://blog.zololabs.com/tag/clojure/feed/]
name = The making of Zolodeck

# https://metaphysicaldeveloper.wordpress.com
[http://metaphysicaldeveloper.wordpress.com/tag/clojure/feed/]
name = Daniel Ribeiro

[http://raphamiard.posterous.com/rss.xml?tag=clojure]
name = Raphael Amiard

[http://www.nicobalestra.com/?cat=27&feed=rss2]
name = Nico Balestra

# http://www.chrisfrisz.com/blog/
[http://chrisfrisz.com/blog/feeds/Clojure.atom.xml]
name = Chris Frisz

[http://stevendick.github.io/blog/categories/clojure/atom.xml]
name = Steven Dick

[http://paulsanwald.com/blog/category/4.rss]
name = Paul Sanwald

[http://www.seekingclojure.com/rss]
name = Seeking Clojure

[http://www.colinsteele.org/rss]
name = Colin Steele
filter = (clojure|\(def |\(defn-? )

[http://entxtech.blogspot.com/feeds/posts/default]
name = Marc Limotte
filter = (clojure|\(def |\(defn-? )

[http://blakesmith.me/atom.xml]
name = Blake Smith
filter = (clojure|\(def |\(defn-? )

[http://jatinpuri.com/tag/clojure/feed/]
name = Jatin Puri

[http://denkspuren.blogspot.de/feeds/posts/default/-/clojure]
name = Dominikus Herzberg

[http://txt.arboreus.com/tagged/clojure.atom]
name = Sergey Astanin

[http://simonholgate.wordpress.com/category/clojure/feed/]
name = Simon Holgate

[https://jan.rychter.com/enblog/rss.xml]
name = Jan Rychter
filter = (clojure|\(def |\(defn-? )

[http://www.element84.com/feed/atom]
name = Element 84
filter = (clojure|\(def |\(defn-? )

[http://kimavcrp.blogspot.com/feeds/posts/default/-/clojure]
name = Exploring the programming world

[http://emekamicro.blogspot.in/feeds/posts/default/-/Clojure]
name = "Programmer[:world]"

[http://blog.beanstalkapp.com/rss]
name = Beanstalk
filter = (clojure|\(def |\(defn-? )

[http://www.proctor-it.com/category/clojure/feed/]
name = Steven Proctor

[http://blogs.oreilly.com/cgi-bin/mt/mt-search.cgi?blog_id=57&tag=clojure&limit=20&IncludeBlogs=57&Template=feed]
name = "O'Reilly blogs"

[http://www.snowfrog.net/tag/clojure/feed/]
name = Sonia Hamilton

[http://www.theserverside.com/rss/ContentSyndication.xml]
name = TheServerSide
filter = (clojure|\(def |\(defn-? )

# Site isn't available...
# http://blog.sourceninja.com/
# name = SourceNinja
# filter = (clojure|\(def |\(defn-? )

[http://adumont.fr/blog/category/informatique/clojure/feed/]
name = Antoine Romain Dumont

[http://swaroopch.com/tag/clojure/feed/]
name = Swaroop C H

[http://gtrak.wordpress.com/category/clojure/feed/]
name = Gary Trakhman

[http://hircus.wordpress.com/category/clojure/feed/]
name = Michel Alexandre Salim

[http://literateprogrammer.blogspot.co.uk/feeds/posts/default/-/clojure]
name = Chris Ford

# http://www.flyingmachinestudios.com
[http://feeds.feedburner.com/FlyingMachineStudios]
name = Flying Machine Studios
filter = (clojure|\(def |\(defn-? )

[http://mattyjwilliams.blogspot.co.uk/feeds/posts/default/-/clojure]
name = Matty Williams

[http://blog.mattyw.net/blog/categories/clojure/atom.xml]
name = Matt Williams

[http://www.andrewhjon.es/rss.xml?tag=clojure]
name = Andrew Jones

[http://tapestryjava.blogspot.com/feeds/posts/default/-/clojure]
name = Tapestry Central

[http://euroclojure.com/2013/feed/]
name = Euroclojure

#[http://mcav.com/feed/clojure/]
#name = Marcus Cavanaugh

[http://shenfeng.me/atom_clj.xml]
name = Feng Shen

# http://stevelosh.com/blog/
[http://feeds2.feedburner.com/stevelosh]
name = Steve Losh
filter = (clojure|\(def |\(defn-? )

[http://www.thebusby.com/feeds/posts/default]
name = Alan Busby
filter = (clojure|\(def |\(defn-? )

[http://pelle.github.io/atom.xml]
name = Pelle Brændgaard

[http://hack-tastic.blogspot.com/feeds/posts/default]
name = Hacktastic

[http://clojurian.blogspot.com/feeds/posts/default]
name = Musings on Clojure

[http://rhnh.net/posts.atom?tag=clojure]
name = Xavier Shay

# http://www.50ply.com/
[http://feeds.feedburner.com/50plyBlog]
name = Brian Taylor
filter = (clojure|\(def |\(defn-? )

[http://us4.campaign-archive2.com/feed?u=a33b5228d1b5bf2e0c68a83f4&id=4c2b86e9f4]
name = Clojure Gazette

[http://paralambda.org/tag/clojure/feed/]
name = Alexander Kahl

[http://blog.datomic.com/feeds/posts/default]
name = Datomic

[http://halgari.blogspot.com/feeds/posts/default]
name = "(apply clojure @life)"

[http://blog.lab49.com/feed]
name = Lab49
filter = (clojure|\(def |\(defn-? )

[http://alexcollins.org/blog/tag/clojure-2/feed]
name = Mente Abierta

# http://nelsonmorris.net
[http://feeds.feedburner.com/nelsonmorris]
name = Nelson Morris
filter = (clojure|\(def |\(defn-? )

[http://tgk.github.io/feed/atom.xml]
name = Thomas Greve Kristensen

[http://aphyr.com/tags/clojure.atom]
name = Kyle Kingsbury

[http://yogthos.net/feed.xml]
name = Dmitri Sotnikov

# http://olabini.com/blog/
[http://feedpress.me/olabini]
name = Ola Bini
filter = (clojure|\(def |\(defn-? )

[http://clojurefun.wordpress.com/feed/]
name = Mike Anderson

[http://samesake.com/log/feed.xml]
name = Thom Omans
filter = (clojure|\(def |\(defn-? )

[http://reborg.tumblr.com/tagged/clojure/rss]
name = Reblog

[http://feeds.feedburner.com/Conjobble]
name = Steve Miner

[http://www.jamesward.com/category/clojure/feed/]
name = James Ward

[http://saolsen.tumblr.com/tagged/clojure/rss]
name = Stephen Olsen

[http://blog.mezeske.com/?tag=clojure&feed=rss2]
name = Evan Mezeske

[http://git.slothrop.net/git-slothrop-net.rss]
name = Andrew Cowper

[http://digitheadslabnotebook.blogspot.de/feeds/posts/default/-/clojure]
name = "Digithead's Lab Notebook"

[http://channel9.msdn.com/Tags/clojure/RSS]
name = Clojure at Channel9@MSDN

[http://siscia.github.io/rss-clojure.xml]
name = Simone Mosciatti

# http://twopoint718.github.com/blog.html
# name = Chris Wilson
# filter = (clojure|\(def |\(defn-? )

# TODO: re-check
#[http://www.dissoc.net/blog/categories/clojure/atom.xml]
#name = Ghadi Shayban

# http://www.benrady.com
[http://feeds.feedburner.com/Radyology]
name = Ben Rady
filter = (clojure|\(def |\(defn-? )

[http://leandromoreira.com.br/category/clojure/feed/]
name = Leandro Moreira

[http://blog.gonzih.me/atom.xml]
name = Max Gonzih
filter = (clojure|\(def |\(defn-? )

# http://jasonrudolph.com/blog/
[http://feeds.feedburner.com/jasonrudolph]
name = Jason Rudolph
filter = (clojure|\(def |\(defn-? )

#[http://blog.conj-labs.eu/rss]
#name = Conj Labs

[http://programmablelife.blogspot.co.at/feeds/posts/default/-/clojure]
name = programmable life

[http://blog.clojurewerkz.org/atom.xml]
name = The ClojureWerkz Blog

[https://www.booleanknot.com/blog/feed.xml]
name = James Reeves
filter = (clojure|\(def |\(defn-? )

[http://samrat.me/feeds/clojure.xml]
name = Samrat Man Singh
filter = (clojure|\(def |\(defn-? )

[http://tgoossens.wordpress.com/tag/clojure/feed/]
name = Thomas Goossens

[http://www.pitheringabout.com/?feed=rss2&cat=9]
name = Jon Pither

[http://theholyjava.wordpress.com/tag/clojure/feed/]
name = Jakub Holý

[http://www.nectarineimp.com/feed/]
name = Nectarine Imp
filter = (clojure|\(def |\(defn-? )

[http://www.pauldee.org/blog/category/clojure/feed/]
name =  Paul deGrandis

[http://www.mikeivanov.com/rss]
name = Mike Ivanov
filter = (clojure|\(def |\(defn-? )

[http://www.plusastra.com/feeds/posts/default/-/clojure]
name = Denis Fuenzalida on PlusAstra

[http://eigenhombre.com/feed.clojure.xml]
name = John Jacobsen

[http://feeds.feedburner.com/AmsterdamClojuriansMeetup]
name = Amsterdam Clojurians Meetup

[http://internistic.blogspot.ca/feeds/posts/default/-/clojure]
name = Paul Umbers

[http://elhumidor.blogspot.de//feeds/posts/default/-/clojure]
name = John Hume

[http://dev.xscheme.de/tag/clojure/feed/]
name = Yannick Scherer

[http://changearc.wordpress.com/category/clojure/feed/]
name = Richard West

[http://scattered-thoughts.net/atom.xml]
name = Jamie Brandon
filter = (clojure|\(def |\(defn-? )

[http://drtom.schank.ch/posts/clojure_feed.xml]
name = Thomas Schank

[http://www.brandonbloom.name/atom.xml]
name = Brandon Bloom
filter = (clojure|\(def |\(defn-? )

[http://loganis-data-science.blogspot.com/feeds/posts/default/-/Clojure]
name = Arnold Matyasi

[http://jirka.marsik.me/rss.xml]
name = Jirka Maršík
filter = (clojure|\(def |\(defn-? )

[http://www.wisdomandwonder.com/tag/clojure/feed]
name = Grant Rettke

[http://worldcognition.blogspot.com/feeds/posts/default/-/clojure]
name = Alexander Semenov

[http://blog.kilosecond.com/blog/categories/clojure/atom.xml]
name = Chris Shea

[http://sgeo.tumblr.com/tagged/clojure/rss]
name = Sgeo Comet

# https://www.hackerschool.com/blog/
[https://www.recurse.com/blog.rss]
name = Hacker School
filter = (clojure|\(def |\(defn-? )

[http://michaeldrogalis.tumblr.com/tagged/clojure/rss]
name = Michael Drogalis

[http://jrheard.tumblr.com/tagged/clojure/rss]
name = JR Heard

[http://www.leonardoborges.com/writings/tags/clojure/atom.xml]
name = Leonardo Borges

[http://walkwithoutrhythm.net/blog/categories/clojure/atom.xml]
name = Brandon Harvey

[http://www.eventbrite.com/rss/organizer_list_events/2086345901]
name = London Clojurian Events

[http://pchristensen.com/blog/articles/category/clojure/feed/]
name = Peter Christensen

[http://justforfn.blogspot.com//feeds/posts/default]
name = Just For Fn

[http://regretful.ly/feed.clojure.xml]
name = Robert Pitts

[http://blog.bigml.com/category/clojure-2/feed/]
name = BigML.com

[http://mowat27.blogspot.co.uk/feeds/posts/default/-/clojure]
name = Adrian Mowat

[http://outcastgeek.com/tag/Clojure/atom.xml]
name = outcastgeek

[http://jvmsoup.com/category/clojure/feed/]
name = Daniel Turczański

[http://augustl.com/atom.xml]
name = August Lilleaas
filter = (clojure|\(def |\(defn-? )

[http://www.mybuddymichael.com/atom.xml]
name = Michael Hanson
filter = (clojure|\(def |\(defn-? )

[http://http-kit.org/atom.xml]
name = HTTP Kit

# Contacted author to get feed
# http://decomplecting.org/blog/categories/clojure/
#name = Jason Lewis
#filter = (clojure|\(def |\(defn-? )

[http://blogs.oracle.com/nashorn/feed/entries/atom?tags=clojurescript]
name = Nashorn JavaScript Project

[http://blog.chariotsolutions.com/feeds/posts/default/-/clojure]
name = Chariot Solutions

[http://tailrecursion.com/blog/categories/clojure/atom.xml]
name = tailrecursion

[http://theblankscreen.net/blog/categories/clojure/atom.xml]
name = The Blank Screen

[http://rycole.com/rss.xml]
name = Ryan Cole
filter = (clojure|\(def |\(defn-? )

[http://stradblog.blogspot.com/feeds/posts/default/-/Clojure]
name = Ryan Stradling

[http://mx-clojure.blogspot.com/feeds/posts/default/-/clojure]
name = Oscar Riveros

[http://maxprokopiev.com/clojure-atom.xml]
name = Max Prokopiev

[http://michaelalynmiller.com/blog/categories/clojure/atom.xml]
name = Michael Alyn Miller

[http://www.bigjason.com/tags/clojure.atom]
name = Jason Webb

[http://mishadoff.github.io/blog/categories/clojure/atom.xml]
name = mishadoff thoughts

[http://wit.io/posts/categories/clojure.rss]
name = David Jacobs

[http://blog.pluralsight.com/tag/clojure/feed]
name = Pluralsight

[http://stefan.arentz.ca/feeds/Clojure.atom.xml]
name = Stefan Arentz

[http://www.kedrovsky.com/blog/feed.xml]
name = Karl Kedrovsky
filter = (clojure|\(def |\(defn-? )

[http://mindbat.com/feed/]
name = Mindbat
filter = (clojure|\(def |\(defn-? )

[http://blog.tomeklipski.com/feeds/posts/default/-/clojure]
name = Tomek Lipski

[http://thornydev.blogspot.com/feeds/posts/default]
name = Michael Peterson
filter = (clojure|\(def |\(defn-? )

[http://intothewebs.tumblr.com/tagged/clojure/rss]
name = Pedro Mendez Calção

[http://bitzero.org/feeds/tag/clojure.atom.xml]
name = James Polera

[http://paradigmx.net/blog/categories/clojure/atom.xml]
name = Paradigm X

[http://techblog.zenrobotics.com/feeds/posts/default/-/clojure]
name = "ZenRobotics R&D Blog"

[http://dev.theladders.com/categories/clojure/atom.xml]
name = TheLadders Engineering Stories

[http://manuelp.herokuapp.com/feed/clojure]
name = Manuel Paccagnella

# http://ragnard.github.io/
[http://feeds.feedburner.com/ragnar-dahlen]
name = Ragnar Dahlén
filter = (clojure|\(def |\(defn-? )

[http://blog.guillermowinkler.com/blog/categories/clojure/atom.xml]
name = Guillermo Winkler

# http://blog.paralleluniverse.co/
[http://feeds.feedburner.com/ParallelUniverseBlog]
name = Parallel Universe blog
filter = (clojure|\(def |\(defn-? )

[http://blog.maio.cz/feeds/posts/default/-/clojure]
name = Marian Schubert

[http://fbmnds.blogspot.com/feeds/posts/default/-/clojure]
name = Friedrich Boeckh

[http://agnosticdevs.com/category/clojure/feed/]
name = AgnosticDevs

[http://pettomato.tumblr.com/rss]
name = Pet Tomato
filter = (clojure|\(def |\(defn-? )

[http://www.rafael-chacon.com/tagged/clojure/rss]
name = Rafael Chacón

[http://blackrhino.io/feed/clojure/]
name = Sam Garrett

[http://www.quantisan.com/feeds/tag/clojure_atom.xml]
name = Paul Lam

[http://adambard.com/blog/feed.xml]
name = Adam Bard
filter = (clojure|\(def |\(defn-? )

[http://michaelrbernste.in/feed.xml]
name = Michael Robert Bernstein
filter = (clojure|\(def |\(defn-? )

[http://honza.ca/atom.xml]
name = Honza Pokorny
filter = (clojure|\(def |\(defn-? )

[http://offcode.blogspot.com/feeds/posts/default/-/clojure]
name = offcode

[http://ecmendenhall.github.io/blog/categories/clojure/atom.xml]
name = Connor Mendenhall

[http://malagastockholm.wordpress.com/tag/clojure/feed/]
name = Kiko Fernandez

[http://ignaciothayer.com/atom.xml]
name = Ignacio Thayer
filter = (clojure|\(def |\(defn-? )

[http://www.russet.org.uk/blog/feed]
name = Phillip Lord
filter = (clojure|\(def |\(defn-? )

[http://hacliff.tumblr.com/rss]
name = Henry Clifford
filter = (clojure|\(def |\(defn-? )

[http://narkisr.com/atom.xml]
name = Ronen Narkis
filter = (clojure|\(def |\(defn-? )

[http://z.caudate.me/rss/]
name = Chris Zheng

[http://www.greghendershott.com/feeds/Clojure.rss.xml]
name = Greg Hendershott

[http://patternhatch.com/tag/clojure/feed/]
name = Pattern Hatch

[http://bluemontlabs.com/blog/categories/clojure/atom.xml]
name = Bluemont Labs

[http://blog.goodstuff.im/rss.xml]
name = David Pollak
filter = (clojure|\(def |\(defn-? )

[http://gphil.net/tags/clojure.xml]
name = Greg Phillips

[http://blog.josephwilk.net/clojure/atom.xml]
name = Joseph Wilk

[http://technotzen.wordpress.com/tag/clojure/feed/]
name = Vishal Sakaria

[http://blog.doppioslash.com/tag/clojure/rss/]
name = Claudia Doppioslash

[http://www.lambdacat.com/tag/clojure/rss/]
name = LambdaCat

[http://cms.1729.org.uk/feed/clojure]
name = Ray Miller

[http://inchingforward.blogspot.com/feeds/posts/default/-/clojure]
name = Mike Janger

[http://functionaltalks.org/tag/clojure/feed/]
name = Functional Talks

[https://www.safaribooksonline.com/blog/feed/]
name = Safari Books Online
filter = (clojure|\(def |\(defn-? )

# http://www.boxuk.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=14a0b65f9d110eb544287bf9d3ca3a75&_render=rss]
name = Box UK
filter = (clojure|\(def |\(defn-? )

# http://hueypetersen.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=165bdb45e7793b90769fafb0d010ffbc&_render=rss]
name = Huey Petersen
filter = (clojure|\(def |\(defn-? )

# http://funclojure.tumblr.com/
[http://funclojure.tumblr.com/rss]
name = Gerrit Jansen van Vuuren

[http://blog.drewolson.org/blog/categories/clojure/atom.xml]
name = Drew Olson

# http://vishnumenon.com/
[http://www.vishnumenon.com/tag/Clojure.xml]
name = Vishnu Menon

[http://masondesu.github.io/blog/categories/clojure/atom.xml]
name = Mason Stewart

#[http://si14.livejournal.com/data/atom?tag=clojure,en&mode=and]
[http://pipes.yahoo.com/pipes/pipe.run?_id=133b68fd676ad6f57f03fc65c25134ea&_render=rss]
name = Dmitry Groshev
filter = (clojure|\(def |\(defn-? )

# http://dimagog.github.io
[http://dimagog.github.io/atom_clojure.xml]
name = Dmitry Kakurin

[http://richardminerich.com/tag/clojure/feed/]
name = Rick Minerich

# http://rigsomelight.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=95072f49f16710a7d767e81a90494c37&_render=rss]
name = Bruce Hauman
filter = (clojure|\(def |\(defn-? )

# http://bryangilbert.com
[http://feeds.feedburner.com/bryangilbert/YXgS]
name = Bryan Gilbert

[http://hypirion.com/rss/clojure]
name = "Jean Niklas L'orange"

[http://annapawlicka.com/category/clojure/feed/]
name = Anna Pawlicka

# http://blog.screen6.io/tagged/clojure/rss
# http://screen6.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=19e13712a740f1a0c03ce66df6345e63&_render=rss]
name = Screen6HQ
filter = (clojure|\(def |\(defn-? )

[http://michaelochurch.wordpress.com/tag/clojure/]
name = Michael O. Church

# http://nyeggen.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=a41c05374ea6e4407751418fa53dad05&_render=rss]
name = Bryce Nyeggen
filter = (clojure|\(def |\(defn-? )

# http://aheusingfeld.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=5171e53175d2ddc5d1df68ad7d880edd&_render=rss]
name = Alex Heusingfeld
filter = (clojure|\(def |\(defn-? )

# http://blog.morphism.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=eaaaf461e125b86fa315bb207edb1046&_render=rss]
name = Morphism Labs News
filter = (clojure|\(def |\(defn-? )

[http://thechangelog.com/tagged/clojure/feed/]
name = The Changelog

[http://frenchy64.github.io/atom.xml]
name = Ambrose Bonnaire-Sergeant

# http://e-string.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=658bdc1907db986e1d208c08ea5da74b&_render=rss]
name = Julio Barros
filter = (clojure|\(def |\(defn-? )

[http://deliberate-software.com/blog/categories/clojure/atom.xml]
name = Steve Shogren

[http://logaan.github.io/feed.xml]
name = Logan Campbell

[http://benatkin.com/tag/clojure/feed/]
name = Ben Atkin

[http://jbm.io/categories/clojure/atom.xml]
name = John Mastro

[http://seabre.github.io/blog/categories/clojure/atom.xml]
name = Sean Brewer

[http://pmbauer.github.io/feed.clojure.xml]
name = Paul Bauer

[http://eng.copious.com/blog/categories/clojure/atom.xml]
name = Copious Engineering

[http://jtfmumm.com/blog/category/clojure/feed/]
name = John Mumm

[http://benmabey.com/tags/clojure/atom.xml]
name = Ben Mabey

[http://the-arm.com/category/clojure/feed/]
name = Antonio Terreno

# http://jackdschultz.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=84d78cb3ff3f93c5e7d41125ab49eb9d&_render=rss]
name = Jack Schultz
filter = (clojure|\(def |\(defn-? )

[http://clojurecup.com/blog/feed.xml]
name = Clojure Cup

# http://codeofrob.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=df743a4994cbe993d0bedd964cd4860e&_render=rss]
name = Rob Ashton
filter = (clojure|\(def |\(defn-? )

# http://martin.janiczek.cz
[http://pipes.yahoo.com/pipes/pipe.run?_id=a9074534ca5a075090d7206bc00d530b&_render=rss]
name = Martin Janiczek
filter = (clojure|\(def |\(defn-? )

# https://teamgaslight.com/blog/?format=rss
[http://pipes.yahoo.com/pipes/pipe.run?_id=a94adf96e4c83779bbef5bf20da57a6c&_render=rss]
name = Gaslight
filter = (clojure|\(def |\(defn-? )

# http://crsmithdev.com/blog.html
[http://pipes.yahoo.com/pipes/pipe.run?_id=ef8b5c4d670ece580c9eda03f640555d&_render=rss]
name = Chris Smith
filter = (clojure|\(def |\(defn-? )

# http://www.neo.com/blog
[http://pipes.yahoo.com/pipes/pipe.run?_id=7a41b0d5e2cc450a7a00fceea62735dc&_render=rss]
name = Neo
filter = (clojure|\(def |\(defn-? )

# http://www.markhneedham.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=0baf3b6731afe9cbe4d9f504f375df53&_render=rss]
#[http://www.markhneedham.com/blog/tag/clojure/feed/]
name = Mark Needham
filter = (clojure|\(def |\(defn-? )

[http://www.dotkam.com/category/clojure/feed/]
name = dot kam

# http://www.spyfoos.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=a5703df3c95bc28314b4d4e211adb7bf&_render=rss]
name = Martin Clausen
filter = (clojure|\(def |\(defn-? )

# http://www.toomuchcode.org/
[http://pipes.yahoo.com/pipes/pipe.run?_id=3f5da2f2ebc933d20601cafcbed826ad&_render=rss]
name = Ryan Brush
filter = (clojure|\(def |\(defn-? )

[http://blog.codenotes.me/rss]
name = codenotes.me

[http://www.rosshuggett.com/feeds/posts/default/-/clojure]
name = Ross Huggett

# http://blog.circleci.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=5aeddc3adb6ea9047355e7626084a6c9&_render=rss]
name = CircleCI
filter = (clojure|\(def |\(defn-? )

[http://bzg.fr/clojure.xml]
name = Bastien Guerry

# http://blog.jenkster.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f411e594c8e2e8938f34921f688c76dd&_render=rss]
name = Kris Jenkins
filter = (clojure|\(def |\(defn-? )

# http://mullr.wordpress.com/category/clojure
[http://mullr.wordpress.com/category/clojure/feed/]
name = Russell Mull

[http://nd.github.io/feed.clojure.xml]
name = nd

[http://adereth.github.io/clojure.xml]
name = adereth

[http://teropa.info/blog/clojure.xml]
name = Tero Parviainen

[http://marcopolo.io/feeds.clojure.xml]
name = Marco Munizaga

# http://derjan.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=1e4f6417076515f64e65a10b2b964065&_render=rss]
name = Jan Ehrhardt
filter = (clojure|\(def |\(defn-? )

[http://adam.pohorecki.pl/blog/categories/clojure/atom.xml]
name = Adam Pohorecki

[http://velrok.github.io/blog/categories/clojure/atom.xml]
name = Waldemar Schwan

[http://221b-labs.com/tag/clojure/feed/]
name = 221B Labs

[http://nathanic.org/tags/clojure/index.xml]
name = Nathan Stien

# http://blog.find-method.de/
[http://pipes.yahoo.com/pipes/pipe.run?_id=e429d9112ae5293a8c3bf402808a9ccc&_render=rss]
name = Holger Schauer
filter = (clojure|\(def |\(defn-? )

[http://pannoniancoder.blogspot.com/feeds/posts/default/-/clojure]
name = Vjeran Marcinko

[http://cupofjava.de/blog/categories/clojure/atom.xml]
name = Felix Müller

[http://koodo.wordpress.com/category/clojure/feed/]
name = koodo

# http://developers.opengamma.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f434c5da291c76be1346bbcc35280320&_render=rss]
name = OpenGamma
filter = (clojure|\(def |\(defn-? )

[http://www.thattommyhall.com/blog/categories/clojure/atom.xml]
name = Tom Hall

[http://www.clojured.com/feeds/posts/default]
name = Clojured

[http://minley.org/tags/clojure.xml]
name = Chris Wilson

# http://reiddraper.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f781126b4a1e8aa9d1683e6a692890b7&_render=rss]
name = Reid Draper
filter = (clojure|\(def |\(defn-? )

# http://www.mihneadb.net/
[http://pipes.yahoo.com/pipes/pipe.run?_id=81097964530444435738a8aa663ad54c&_render=rss]
name = Mihnea Dobrescu-Balaur
filter = (clojure|\(def |\(defn-? )

# http://www.mkrrf-it.com/
[http://www.mkrrf-it.com/blogs-of-jiawei-zhao/index.xml]
name = Jiawei Zhao

[http://reactiveclojure.blogspot.com/feeds/posts/default]
name = Clojure Reactive Programming

[http://arrdem.com/feeds/clojure.xml]
name = Reid McKenzie

[http://loganlinn.com/blog/categories/clojure/atom.xml]
name = Logan Linn

# http://dpassen1.github.io/
[http://dpassen1.github.io/clojure-rss.xml]
name = Derek Passen

[http://feeds.feedburner.com/JonathansClojureBlog]
name = Jonathan Harrington

# http://blog.steveolsen.us/
[http://pipes.yahoo.com/pipes/pipe.run?_id=791657d2f849b28b85c3dac8f6d34177&_render=rss]
name = Stephen Olsen
filter = (clojure|\(def |\(defn-? )

[http://www.compoundtheory.com/category/clojure/feed/]
name = Mark Mandel

# https://hackworth.be
[http://pipes.yahoo.com/pipes/pipe.run?_id=033fa0a46cab355124da1df097817018&_render=rss]
name = John P. Hackworth
filter = (clojure|\(def |\(defn-? )

# http://diegobasch.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=689cde21cd1855d2cb91d9919d7a80a9&_render=rss]
name = Diego Basch
filter = (clojure|\(def |\(defn-? )

# http://www.lexicallyscoped.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=a1b91e030ddb5c667322786f4d87877d&_render=rss]
name = Fredrik Dyrkell
filter = (clojure|\(def |\(defn-? )

[http://defromeo.github.io/blog/categories/clojure/atom.xml]
name = Romeo

# http://www.paradiso.cc/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f4f0c76c3382f1349d3dbd72744963ef&_render=rss]
name = Brennon York
filter = (clojure|\(def |\(defn-? )

[http://blog.shriphani.com/feeds/clojure.rss.xml]
name = Shriphani Palakodety

[http://mcohen01.github.io/atom.xml]
name = Michael Cohen

[http://techblog.netflix.com/feeds/posts/default/-/Clojure]
name = The Netflix Tech Blog

[http://machinomics.blogspot.com.es/feeds/posts/default/-/Clojure]
name = Machinomics

[http://adamsolove.com/clojure.xml]
name = Adam C.M. Solove

[http://clojure-android.info/blog/rss-feed]
name = Clojure on Android

# http://blog.mediocregopher.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=167ba969a96a49c5e4c8071449466e76&_render=rss]
name = Brian Picciano
filter = (clojure|\(def |\(defn-? )

[http://www.functionalgeekery.com/feed/]
name = Functional Geekery

# http://blog.jakubarnold.cz/
[http://pipes.yahoo.com/pipes/pipe.run?_id=4bfc1c65fd27b19a3a560d1220bb67f3&_render=rss]
name = Jakub Arnold
filter = (clojure|\(def |\(defn-? )

[http://ykode.com/tag/enclojure/feed/]
name = Didiet Noor

# http://blog.travisthieman.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=422f9255003a22e00aa86d2c776de181&_render=rss]
name = Travis Thieman
filter = (clojure|\(def |\(defn-? )

# http://http://danielsz.github.io/
[http://danielsz.github.io/feed.clojure.xml]
name = Daniel Szmulewicz

[http://ericgebhart.com/clojure/feed/]
name = Eric Gebhart

# http://macromancy.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=120ea9f946a7b846e5870dd3da59cce1&_render=rss]
name = Max Countryman
filter = (clojure|\(def |\(defn-? )

# http://blog.podsnap.com/tag/clojure.html
[http://blog.podsnap.com/feed/tag-clojure-atom.xml]
name = Peter Fraenkel

[http://java.dzone.com/category/tags/clojure/feed]
name = DZone

# http://chriswoodford.posthaven.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=09f23932d41db7407d4c5ea6832b3664&_render=rss]
name = Chris Woodford
filter = (clojure|\(def |\(defn-? )

# https://scott.mn
[http://pipes.yahoo.com/pipes/pipe.run?_id=b73722c2668ff3af0099568a026833f4&_render=rss]
name = Scott Feeney
filter = (clojure|\(def |\(defn-? )

[http://g33ktalk.com/tag/clojure-2/feed/?v=1]
name = Hakka Labs

# https://ochronus.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=1a0a9f6ba4c361f8c2bfea4e91424506&_render=rss]
name = Csaba Okrona
filter = (clojure|\(def |\(defn-? )

# http://www.rkn.io/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=b95cdfe2477a626008b6f5ee99750aa0&_render=rss]
#filter = (clojure|\(def |\(defn-? )
[http://www.rkn.io/feeds/clojure_feed.xml]
name = Ryan Neufeld

# http://daveyarwood.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=c83ca954104205072bb29e7b6afd8ebf&_render=rss]
name = Dave Yarwood
filter = (clojure|\(def |\(defn-? )

[https://taylodl.wordpress.com/tag/clojure-2/feed/]
name = Don Taylor

# http://blog.platypope.org/
[http://pipes.yahoo.com/pipes/pipe.run?_id=e1d912b2621fdbf257165fa0766ad71a&_render=rss]
name = Marshall Bockrath-Vandegrift
filter = (clojure|\(def |\(defn-? )

# http://ravi.pckl.me/
[http://pipes.yahoo.com/pipes/pipe.run?_id=837373d2e303c4733b5336dc2ae83a4d&_render=rss]
name = Ravi Kotecha
filter = (clojure|\(def |\(defn-? )

[http://blog.bfontaine.net/blog/categories/clojure/atom.xml]
name = Baptiste Fontaine

# http://kodare.net/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=b109849efe95f130291fbe7ba76bbe71&_render=rss]
name = Kodare
filter = (clojure|\(def |\(defn-? )

# http://galdolber.tumblr.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=8f7bd9da9f824ba7c201331a541b98eb&_render=rss]
name = Gal Dolber
filter = (clojure|\(def |\(defn-? )

[http://ianrumford.github.io/blog/categories/clojure/atom.xml]
name = Ian Rumford

#[http://www.digitalcld.com/cld/category/clojure/feed/]
#name = Architecting Beyond Twenty Fourteen

# http://kendru.github.io
[http://feeds.feedburner.com/kendru-write]
name = Andrew Meredith

[http://blog.lauripesonen.com/rss/]
name = Lauri Pesonen

[http://togototo.wordpress.com/tag/clojure/feed/]
name = To:goto To;

# http://www.patshields.net/
[http://pipes.yahoo.com/pipes/pipe.run?_id=84b6fa1071ba82c635b7188917feaa86&_render=rss]
name = Patrick Shields
filter = (clojure|\(def |\(defn-? )

[http://blog.suprematic.net/feeds/posts/default/-/clojure]
name = Suprematic

[http://eng.climate.com/tag/clojure/feed/]
name = The Climate Corporation

# http://blog.ndk.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=8b7efbd781ee2e99ebe71c64132b5aaa&_render=rss]
name = Nicholas Kariniemi
filter = (clojure|\(def |\(defn-? )

# https://semaphoreapp.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=c9463462d812a162b9aca594510e1cb9&_render=rss]
name = Semaphore
filter = (clojure|\(def |\(defn-? )

[http://geekoverboard.com/category/programming/clojure/feed/]
name = Geek Overboard

[http://about.greeni.us/tag/clojure/feed/]
name = Greenius

[http://bridgetconsulting.com/?cat=27&feed=rss2]
name = Bridget Hillyer

[http://missingfaktor.blogspot.in/feeds/posts/default/-/clojure]
name = Rahul Goma Phulore

# http://blog.00null.net/
[http://pipes.yahoo.com/pipes/pipe.run?_id=d936c705d17d6dcae8ab69e6fb19ac37&_render=rss]
name = Shane Kilkelly
filter = (clojure|\(def |\(defn-? )

# http://dev.solita.fi/
[http://pipes.yahoo.com/pipes/pipe.run?_id=dd91c490a43dda2498fc9cb119f2f5e3&_render=rss]
name = Solita developer blog
filter = (clojure|\(def |\(defn-? )

[http://blog.lobberecht.com/feeds/posts/default/-/clojure]
name = Jared Lobberecht

[http://www.falkoriemenschneider.de/feed-clojure.xml]
name = Falko Riemenschneider

[http://josf.info/blog/categories/clojure/atom.xml]
name = Joseph Fahey

# http://programming.oreilly.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f33be969ed847d6f65fe03ae991674cb&_render=rss]
name = "O'Reilly Programming"
filter = (clojure|\(def |\(defn-? )

[http://www.activestate.com/taxonomy/term/692/0/feed]
name = ActiveState

[http://yobriefca.se/feed/clojure.xml]
name = James Hughes

[http://blog.oskarth.com/posts.atom?tag=clojure]
name = Oskar Thorén

# http://tarnbarford.net/
[http://pipes.yahoo.com/pipes/pipe.run?_id=6812bb17255039bfb75a1588c3132f67&_render=rss]
name = Tarn Barford
filter = (clojure|\(def |\(defn-? )

# https://blog.engineyard.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=443b902b0c67f0e8f5aaf7915e5e0df9&_render=rss]
name = Engine Yard
filter = (clojure|\(def |\(defn-? )

# http://hashrocket.com/blog
[http://pipes.yahoo.com/pipes/pipe.run?_id=3991b5304c73b5bea1b9ab01092f10f7&_render=rss]
name = Hashrocket
filter = (clojure|\(def |\(defn-? )

[http://www.ugtastic.com/tag/clojure/feed/]
name = UGtastic

[http://blog.korny.info/clojure-feed.xml]
name = Kornelis Sietsma

# http://puppetlabs.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=60e10c5b54eb96e9862cc806c0fc9116&_render=rss]
name = Puppet Labs
filter = (clojure|\(def |\(defn-? )

[http://www.olindata.com/taxonomy/term/301/feed]
name = OlinData

# http://noobtuts.com/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=5621d2e2052d4bb9beab29b6640184cc&_render=rss]
#name = Noobtuts
#filter = (clojure|\(def |\(defn-? )

[http://nerd.kelseyinnis.com/blog/categories/clojure/atom.xml]
name = Kelsey Gilmore-Innis

[http://blog.oxfordknight.com/?feed=rss2&tag=clojure]
name = Oxford Knight

[http://hitchhikersclojure.com/atom.xml]
name = "Hitchhiker's Guide to Clojure"

[http://deltadata.wordpress.com/tag/clojure/feed/]
name = Nikola Peric

[http://blog.jessitron.com/feeds/posts/default/-/clojure]
name = Jessica Kerr

[http://edwardkenworthy.wordpress.com/tag/clojure/feed/]
name = Edward Kenworthy

# http://flowa.fi/
[http://pipes.yahoo.com/pipes/pipe.run?_id=49da89cd4abbcf4e24c0adb794425997&_render=rss]
name = Flowa
filter = (clojure|\(def |\(defn-? )

# http://functionalworks.ghost.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=c19574a13927cf5630021de24a94c0a4&_render=rss]
name = Functional Works
filter = (clojure|\(def |\(defn-? )

[http://www.clojuregeek.com/atom.xml]
name = Nola Stowe

[http://blog.clojure-gsoc.org/feed/]
name = Clojure/GSoC

# http://jefffowler.io/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=fb9366228dc7252865dc0e6b2a6704b4&_render=rss]
name = Jeff Fowler
filter = (clojure|\(def |\(defn-? )

[http://www.clojure.tn/feed.xml]
name = (Clojure :in Tunisia)

[http://zeroturnaround.com/tag/clojure/feed/]
name = ZeroTurnaround

[http://josephmr.com/tag/clojure/rss/]
name = Joseph Rollins

# http://robots.thoughtbot.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=d1934ee180744606b9a128b18d598baf&_render=rss]
name = Thoughtbot
filter = (clojure|\(def |\(defn-? )

# http://markkettner.roughdraft.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=397e420015c159817de45b9e0541f5ff&_render=rss]
name = Mark Kettner
filter = (clojure|\(def |\(defn-? )

# http://yellerapp.com/archive.html
[http://pipes.yahoo.com/pipes/pipe.run?_id=a4cf6170229450f1e0c562eee4011d75&_render=rss]
name = Yeller
filter = (clojure|\(def |\(defn-? )

# http://blog.nitrous.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=727000528243ca8ba4be84b0198774f3&_render=rss]
name = Nitrous.IO
filter = (clojure|\(def |\(defn-? )

# http://devlinzed.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=9e0a1085137d2a2bf457d3687b3567cc&_render=rss]
name = Devlin Zed
filter = (clojure|\(def |\(defn-? )

# http://www.bigastronaut.com/blog/feed
[http://pipes.yahoo.com/pipes/pipe.run?_id=eee2a4889d1db0ff39ee23163da40427&_render=rss]
name = Big Astronaut
filter = (clojure|\(def |\(defn-? )

[http://blog.alex-turok.com/feeds/posts/default/-/clojure]
name = Alexander Turok

[http://lab.brightnorth.co.uk/tag/clojure/rss/]
name = Bright North Lab

[http://brunov.org/feed-clojure.xml]
name = Bruno Vecchi

[http://theatticlight.net/atom_clojure.xml]
name = Andrew Stine

[http://www.borntosegfault.com/feeds/posts/default/-/clojure]
name = Born to Segfault

[http://fgiasson.com/blog/index.php/category/clojure/feed/rdf/]
name = Frederick Giasson

# http://sevenhong.svbtle.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=3923dd5f17712ca7c6319433d1b7cb35&_render=rss]
name = Seven Hong
filter = (clojure|\(def |\(defn-? )

# http://monkey-robot.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=dd68b48cee0195fce2cccdb710c18da9&_render=rss]
name = Michael Dippery
filter = (clojure|\(def |\(defn-? )

[http://nbeloglazov.com/feed.xml]
name = Nikita Beloglazov

[http://sachachua.com/blog/tag/clojure/feed/]
name = Sacha Chua

[http://bharatbedia.com/tag/clojure/feed/]
name = nrgb

[http://clojurestuff.blogspot.de/feeds/posts/default]
name = Ivan Schütz

[http://nudaygames.squarespace.com/blog?tag=clojure&format=rss]
name = Nuday Games Dev Blog

[http://www.patheos.com/blogs/crywoof/tag/clojure/feed/]
name = Will Duquette

#[http://gdata.youtube.com/feeds/api/users/UCm0Opgi6WZVdzeiYv3DG1dA/uploads]
#name = Clojure Budapest meetup videos

# http://maryrosecook.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=84f7cd615bbcbd627d70eba2c05c087f&_render=rss]
name = Mary Rose Cook
filter = (clojure|\(def |\(defn-? )

[http://www.uswitch.com/tech/tag-clojure.articles.xml]
name = uSwitch Tech Blog

# http://domkm.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=db7c4e83f450e370f35cd9f75aa084d4&_render=rss]
name = Dom Kiva-Meyer
filter = (clojure|\(def |\(defn-? )

[http://norgat.blogspot.com/feeds/posts/default/-/Clojure]
name = Maksim Karandashov

[http://blog.glenjamin.co.uk/posts.atom?tag=clojure]
name = Glen Mailer

[http://blog.muhuk.com/rss/tags/clojure.xml]
name = Atamert Ölçgen

[http://xivilization.net/~marek/blog/categories/clojure/atom.xml]
name = Marek Kubica

http://nikola.plejic.com/archives.html
[http://pipes.yahoo.com/pipes/pipe.run?_id=07ce0edb6267d3c8893cabc767437544&_render=rss]
name = Nikola Plejić
filter = (clojure|\(def |\(defn-? )

[http://mytediousblog.blogspot.com/feeds/posts/default/-/clojure]
name = Chris Jenkins

[http://tech.gilt.com/tagged/clojure/rss]
name = Gilt Tech

[http://dev.otto.de/tag/clojure/feed/]
name = Dev + Ops at Otto.de

# https://gdstechnology.blog.gov.uk/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f683af081363fcd2442894492b469de9&_render=rss]
name = UK Government Digital Service
filter = (clojure|\(def |\(defn-? )

#http://fitacular.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=721b41a0c8c4ac0acc49a05f633fce82&_render=rss]
name = Fitacular
filter = (clojure|\(def |\(defn-? )

[http://joeygibson.com/tag/clojure/feed]
name = Joey Gibson

# http://matthiasnehlsen.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f02d2bfb739a5ed6401662c1d5634354&_render=rss]
name = Matthias Nehlsen
filter = (clojure|\(def |\(defn-? )

# http://www.hoverbear.org/
[http://pipes.yahoo.com/pipes/pipe.run?_id=ccd17be6e702992980f695e6a80a997c&_render=rss]
name = Andrew Hobden
filter = (clojure|\(def |\(defn-? )

# http://astashov.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=eef4c6361e82e0dba1e3168636ad6438&_render=rss]
name = Anton Astashov
filter = (clojure|\(def |\(defn-? )

# http://john2x.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=67fb74377a657b7d3e75483558569fb1&_render=rss]
name = John Louis Del Rosario
filter = (clojure|\(def |\(defn-? )

[http://osv.io/blog/blog/categories/clojure/atom.xml]
name = OSv

[http://natescottwest.com/tag/clojure/rss/]
name = Nate West

[http://batsov.com/articles/categories/clojure/atom.xml]
name = Bozhidar Batsov

# https://justin.harmonize.fm/
[http://pipes.yahoo.com/pipes/pipe.run?_id=e3be3c5961021da949b9093a39f879bd&_render=rss]
name = Justin Tulloss
filter = (clojure|\(def |\(defn-? )

[http://thenewstack.io/tag/clojure/feed/]
name = The New Stack

[http://conscientiousprogrammer.com/blog/categories/clojure/atom.xml]
name = Franklin Chen

# http://gmorpheme.net/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=5ea5e1dceb3d5612cc8a17e583193883&_render=rss]
[http://gmorpheme.net/feeds/tag-clojure.atom.xml]
name = Greg Hawkins

# http://www.stuttaford.me/
[http://pipes.yahoo.com/pipes/pipe.run?_id=7cdb763c1e070d057c3c8b94a09e43cb&_render=rss]
name = Robert Stuttaford
filter = (clojure|\(def |\(defn-? )

[https://thebhwgroup.com/tags/clojure]
name = The BHW Group

# http://www.marcoyuen.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=5ef6fe27baa2d78ea2a37a124fbb6001&_render=rss]
name = Marco Yuen
filter = (clojure|\(def |\(defn-? )

# http://solovyov.net/
[http://pipes.yahoo.com/pipes/pipe.run?_id=0b57067678a4cc194e5b1ae70ee58346&_render=rss]
name = Alexander Solovyov
filter = (clojure|\(def |\(defn-? )

# http://blog.eikeland.se/
[http://pipes.yahoo.com/pipes/pipe.run?_id=0580764b12d2fcb06467385fcc5f4269&_render=rss]
name = Stian Eikeland
filter = (clojure|\(def |\(defn-? )

[http://bendyworks.com/tag/clojure/feed/]
name = Bendyworks

# http://sapient-pair.com/blog/
[http://sapient-pair.com/blog/feed.clojure.atom]
name = Matthew Phillips

# http://blog.pellucid.com
[http://pipes.yahoo.com/pipes/pipe.run?_id=83de96162042030627f99d415fad65cf&_render=rss]
name = Pellucid
filter = (clojure|\(def |\(defn-? )

[http://udayv.com/feed.clojure.xml]
name = Uday Verma

[http://elbenshira.com/blog/tags/clojure.xml]
name = Elben Shira

[http://dreamtimecircles.com/tag/clojure/feed/]
name = Dreamtime Circles

[http://blog.zenmodeler.com/feed.clojure.xml]
name = ZenModeler Engineering Blog

[http://hivemind.big-safari.io/rss/clojure/]
name = Martin Skou

# http://phuu.net/
[http://pipes.yahoo.com/pipes/pipe.run?_id=ad9eccaa3ce9cd1e925e3c74cf817e54&_render=rss]
name = Tom Ashworth
filter = (clojure|\(def |\(defn-? )

[http://blog.relateiq.com/tag/clojure/feed/]
name = RelateIQ

# http://eng.yammer.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=1930cf8cec33f00d44d0afd7a011da1f&_render=rss]
name = Yammer Engineering
filter = (clojure|\(def |\(defn-? )

[http://www.thesoftwaresimpleton.com/blog/categories/clojure/atom.xml]
name = Paul Cowan

# http://blog.mattgauger.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=c3dbe0c0c2ee9929437764002b0581c1&_render=rss]
name = Matt Gauger
filter = (clojure|\(def |\(defn-? )

[http://beclojure.org/feed/]
name = The Belgian Clojure Community

# http://ashtonkemerling.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=1f8b8596ca3fd64b64ed2bb8c624da4a&_render=rss]
name = Ashton Kemerling
filter = (clojure|\(def |\(defn-? )

[http://blog.michielborkent.nl/planetclojure.xml]
name = Michiel Borkent

[http://suva.sh/atom/planet-clojure.xml]
name = Suvash Thapaliya

[http://arcadia-unity.tumblr.com/rss]
name = Arcadia

[http://feathers.io/blog/feed.clojure.xml]
name = Anne Johnson

[http://nvbn.github.io/feed.clojure.xml]
name = Vladimir Iakovlev

# https://diogo149.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=e4483c719eb47f342f570aedbb37643a&_render=rss]
name = Me vs NP
filter = (clojure|\(def |\(defn-? )

# http://dev.mixrad.io/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=33f9904a0a728d85e359736f3e17f8ed&_render=rss]
name = MixRadio
filter = (clojure|\(def |\(defn-? )

# http://adzerk.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=6ed36f3b346f43bab6f5378b2f299cca&_render=rss]
name = Adzerk Blog
filter = (clojure|\(def |\(defn-? )

# http://www.pixelmonkey.org/
[http://pipes.yahoo.com/pipes/pipe.run?_id=a3d0155b2955f8706c97a08cb1342d48&_render=rss]
name = Andrew Montalenti
filter = (clojure|\(def |\(defn-? )
# http://highorderdysfunctions.blogspot.it
[http://highorderdysfunctions.blogspot.it/feeds/posts/default]
name = Luciano Capitanio

[http://www.railslove.com/stories/clojure.atom]
name = Railslove

[http://carmenla.me/blog/clojure.xml]
name = Carmen La

# https://keminglabs.com/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=a48bc7f7f4c86b26759c7db848e0ea23&_render=rss]
name = Keming Labs
filter = (clojure|\(def |\(defn-? )

# http://www.takipiblog.com/
[http://www.takipiblog.com/category/code/clojure/feed/]
name = Takipi Blog

# http://www.jneen.net/
[https://pipes.yahoo.com/pipes/pipe.run?_id=35a1e0b0efc6e722975b6a8fe8af8574&_render=rss]
name = Jeanine Adkisson
filter = (clojure|\(def |\(defn-? )

[http://www.codeadventurer.com/categories/clojure/atom.xml]
name = Code Adventurer

# http://www.yetanalytics.com/blog/
[https://pipes.yahoo.com/pipes/pipe.run?_id=6acdec964b30532ce6f96ba4ec7ae825&_render=rss]
name = Yet Analytics
filter = (clojure|\(def |\(defn-? )

# http://www.jarrodctaylor.com/
#[https://pipes.yahoo.com/pipes/pipe.run?_id=41a2ae10e2101be2bfc97e85a572fddb&_render=rss]
[http://www.jarrodctaylor.com/atom_clojure.xml]
name = Jarrod C Taylor
filter = (clojure|\(def |\(defn-? )

# http://www.martinklepsch.org/
[https://pipes.yahoo.com/pipes/pipe.run?_id=161005fed88c0f0bd075f618a4b68fa9&_render=rss]
name = Martin Klepsch
filter = (clojure|\(def |\(defn-? )

# http://fixitwithcode.com/
[https://pipes.yahoo.com/pipes/pipe.run?_id=da0fa862dffcb9abe541499db4897b65&_render=rss]
name = Fix it with code
filter = (clojure|\(def |\(defn-? )

# https://jonase.github.io/nil-recur/
[https://pipes.yahoo.com/pipes/pipe.run?_id=7fceae16cbc4dcfa865f2567fd6eca50&_render=rss]
name = Jonas Enlund
filter = (clojure|\(def |\(defn-? )

[http://nazarii.bardiuk.com/tag/clojure/rss/]
name = Nazarii Bardiuk

[http://scheme.rocks/feed.clojure.xml]
name = scheme.rocks

[http://www.laliluna.de/articles/feed/clojure.xml]
name = Sebastian Hennebrueder

[http://insideclojure.org/feed.xml]
name = Inside Clojure

[http://frankiesardo.github.io/clojure.xml]
name = Frankie Sardo

[http://side-effects-bang.blogspot.de/feeds/posts/default/-/clojure]
name = side-effects!

# http://wesmorgan.svbtle.com/
[https://pipes.yahoo.com/pipes/pipe.run?_id=fdd8c3aacf31f82f5964e3b41777f1cd&_render=rss]
name = Wes Morgan
filter = (clojure|\(def |\(defn-? )

# http://isaaccambron.com/blog/
[https://pipes.yahoo.com/pipes/pipe.run?_id=4be013ac543d923197e2f4dd7887f811&_render=rss]
name = Isaac Cambron
filter = (clojure|\(def |\(defn-? )

# http://jdevuyst.blogspot.be
[https://pipes.yahoo.com/pipes/pipe.run?_id=021fb8ca5559c91ab45d356da6d4832c&_render=rss]
name = Jonas De Vuyst
filter = (clojure|\(def |\(defn-? )

# http://blog.carbonfive.com/
[https://pipes.yahoo.com/pipes/pipe.run?_id=a6b8152ad87f01fd20f1ec516ab7d9f1&_render=rss]
name = Carbon Five
filter = (clojure|\(def |\(defn-? )

[https://mwfogleman.github.io/Clojure.xml]
name = Michael Fogleman

[http://blog.wjlr.org.uk/blog/categories/clojure/atom.xml]
name = William Roe

# http://zachcp.org/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=53ebdda590e47bf60c27854293a3735b&_render=rss]
name = Zach Charlop-Powers
filter = (clojure|\(def |\(defn-? )

# http://www.samritchie.io
[https://pipes.yahoo.com/pipes/pipe.run?_id=4602e4a4dd18ff17f76e8077a79bf9a5&_render=rss]
name = Sam Ritchie
filter = (clojure|\(def |\(defn-? )

# http://blog.venanti.us/
#[https://pipes.yahoo.com/pipes/pipe.run?_id=d6ccf6e7c06d18242f1abaf2d6af4856&_render=rss]
[http://blog.venanti.us/tag/clojure/rss/]
name = Venantius
filter = (clojure|\(def |\(defn-? )

# http://zirkonit.svbtle.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=66034de23b1d1230b50bfd7a886decde&_render=rss]
name = Kyle Nowak
filter = (clojure|\(def |\(defn-? )

# http://www.shrayas.com/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=f34fe80a2b84fa905cbd927ad99e458e&_render=rss]
[http://www.shrayas.com/feeds/tag.clojure.atom.xml]
name = Shrayas Rajagopal
#filter = (clojure|\(def |\(defn-? )

# http://rundis.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=1ac2bd5427d73f29e6964012f3a89974&_render=rss]
name = Magnus Rundberget
filter = (clojure|\(def |\(defn-? )

# http://endlessparentheses.com
[https://pipes.yahoo.com/pipes/pipe.run?_id=df0c61cda63cd6fdb7dd3e1bb47173c3&_render=rss]
name = Endless Parentheses
filter = (clojure|\(def |\(defn-? )

# https://wtfleming.github.io/
[https://pipes.yahoo.com/pipes/pipe.run?_id=a7e07ad62f84ffb61925e9b013a69bd7&_render=rss]
name = Will Fleming
filter = (clojure|\(def |\(defn-? )

# http://numergent.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=8325d6a44d746e0725584c134b18bc4e&_render=rss]
name = Numergent
filter = (clojure|\(def |\(defn-? )

# http://www.mase.io/
[https://pipes.yahoo.com/pipes/pipe.run?_id=6e23f05e3b8129f59810bc6aa9420845&_render=rss]
name = Mason Browne
filter = (clojure|\(def |\(defn-? )

[http://www.toccata.io/feed.xml]
name = Toccata

[https://lionfacelemonface.wordpress.com/tag/clojure/feed/]
name = Josh Johnson

# http://blog.fikesfarm.com
[http://pipes.yahoo.com/pipes/pipe.run?_id=733c026e8285575685657fed312899b2&_render=rss]
name = Mike Fikes
filter = (clojure|\(def |\(defn-? )

# http://blog..sveri.de
[http://tales.sveri.de/feed.xml/]
name = Sven Richter

[http://lbradstreet.github.io/feed.xml]
name = Lucas Bradstreet

# http://kukuruku.co/rss/
[http://pipes.yahoo.com/pipes/pipe.run?_id=e878309560980910234a5959c08a33e7&_render=rss]
name = Kukuruku
filter = (clojure|\(def |\(defn-? )

[https://www.paren.com/posts.atom?tags=clojure,clojurescript]
name = (paren)

# http://www.appsflyer.com/category/tech/feed/
[http://pipes.yahoo.com/pipes/pipe.run?_id=94798e0cfbc49e1a80b2845366f57977&_render=rss]
name = AppsFlyer
filter = (clojure|\(def |\(defn-? )

# http://www.mrspeaker.net/feed/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=67553c3701c4994c7ea8e01e5b8182c8&_render=rss]
[http://www.mrspeaker.net/category/nerd/clojure/feed/]
name = O! Mr Speaker!
#filter = (clojure|\(def |\(defn-? )

# http://codemomentum.org
[http://pipes.yahoo.com/pipes/pipe.run?_id=2f068ca316aa7a51b3d03fb511468b16&_render=rss]
name = Halit Olali
filter = (clojure|\(def |\(defn-? )

# http://www.gghh.name/
[https://pipes.yahoo.com/pipes/pipe.run?_id=bb3748a4fbf3ea49f50e4ec130c92050&_render=rss]
name = Giovanni Gherdovich
filter = (clojure|\(def |\(defn-? )

[http://www.aidanf.net/posts?tag=clojure&format=RSS]
name = Aidan Finn

# http://kishanov.roon.io/
[https://pipes.yahoo.com/pipes/pipe.run?_id=6c8d93b12ce79be96d97f3ab968b5744&_render=rss]
name = Kirill Ishanov
filter = (clojure|\(def |\(defn-? )

# http://dhruvp.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=707d0bcea667896a7c3e29f0a4350dc5&_render=rss]
name = "Dhruv's Blog"
filter = (clojure|\(def |\(defn-? )

# http://rinuboney.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=c225dd41d209c8c39cb17d0ebc7680fc&_render=rss]
name = Rinu Boney
filter = (clojure|\(def |\(defn-? )

[http://blog.altometrics.com/tag/clojure/feed/]
name = Altometrics Blog

# Also check the 'clojure' tag later...
# http://www.pushtechnology.com/category/development/
[http://pipes.yahoo.com/pipes/pipe.run?_id=016314769c4c5934e699545be3d25e13&_render=rss]
name = Push Technology
filter = (clojure|\(def |\(defn-? )

# http://ericsomdahl.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=3917e14e68bd4c11355bad3a0273d53d&_render=rss]
name = Eric Somdahl
filter = (clojure|\(def |\(defn-? )

# http://darrennewton.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=1c607f8c982da4873b7881b5975ab39b&_render=rss]
name = Darren Newton
filter = (clojure|\(def |\(defn-? )

# http://bobnadler.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=3e045bba78135a0407b13e82180e57fd&_render=rss]
name = Bob Nadler
filter = (clojure|\(def |\(defn-? )

[http://garajeando.blogspot.com.es/feeds/posts/default/-/Clojure]
name = Garajeando

# https://precursorapp.com/blog
[https://pipes.yahoo.com/pipes/pipe.run?_id=5f1bfc647c174eb4e9ad2ca4f71f2bcc&_render=rss]
name = PrecursorApp
filter = (clojure|\(def |\(defn-? )

[http://code-and-cocktails.herokuapp.com/blog/categories/clojure/feed/]
name = Mark Simpson

[http://engineering.bittorrent.com/tag/clojure/feed/]
name = The BitTorrent Engineering Blog

[http://blog.juxt.pro/clojure.rss.xml]
name = The JUXT Blog

[http://blog.wagjo.com/feed.xml]
name = Jozef Wagner

# https://developer.rackspace.com/
[https://pipes.yahoo.com/pipes/pipe.run?_id=73e016bb41bd42b237f5a4d538255249&_render=rss]
name = Rackspace Developer Blog
filter = (clojure|\(def |\(defn-? )

# [https://pointslope.com/blog/tag/clojure/feed/] & datomic
[https://pipes.yahoo.com/pipes/pipe.run?_id=af9b3fe3ac7b165f4ac9f4d338319565&_render=rss]
name = Point Slope
filter = (clojure|\(def |\(defn-? )

# http://www.mattgreer.org/
[https://pipes.yahoo.com/pipes/pipe.run?_id=fc6145fbce7bac69b705f788ac925587&_render=rss]
name = Matt Greer
filter = (clojure|\(def |\(defn-? )

# https://xsc.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=da1ccaf3e261e544989676cfa7674333&_render=rss]
name = Yannick Scherer
filter = (clojure|\(def |\(defn-? )

# http://stuarth.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=6d496fb2fd7a7a8506e913f7c7ddccc6&_render=rss]
name = Stuart Hinson
filter = (clojure|\(def |\(defn-? )

# http://timgilbert.wordpress.com/
[http://timgilbert.wordpress.com/tag/clojure/feed/]
name = Tim Gilbert

[http://blagrants.blogspot.de/feeds/posts/default/-/Clojure]
name = Alvaro "Blag" Tejada Galindo

# http://www.jasonstrutz.com/
[https://pipes.yahoo.com/pipes/pipe.run?_id=fba23dfc090d16733f7f6aa0b6832391&_render=rss]
name = Jason Strutz
filter = (clojure|\(def |\(defn-? )

[http://www.alexeberts.com/category/clojurescript/feed/]
name = Alex Eberts

# http://www.dillonforrest.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=0daf578b3dc657e7434168d8e5cba3b0&_render=rss]
name = Dillon Forrest
filter = (clojure|\(def |\(defn-? )

# http://rafalcieslak.svbtle.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=ab5d6d218ce042eac9717e2ac7972643&_render=rss]
name = Rafał Cieślak
filter = (clojure|\(def |\(defn-? )

[http://eli.naeher.name/atom-clojure.xml]
name = Eli Naeher

[http://dailytechvideo.com/category/clojure/feed/]
name = Daily Tech Video (Clojure)

# http://blog.cryptoguru.com
[https://pipes.yahoo.com/pipes/pipe.run?_id=075a4e17c00f092536980b88ea660a13&_render=rss]
name = cryptoguru
filter = (clojure|\(def |\(defn-? )

# https://medium.com/we-are-swat
[https://pipes.yahoo.com/pipes/pipe.run?_id=001d4b5b3f6e2412d1c12489ad00b438&_render=rss]
name = SWAT Team
filter = (clojure|\(def |\(defn-? )

# https://medium.com/@davidrupp
[https://pipes.yahoo.com/pipes/pipe.run?_id=8126faff87b537a6263b4864689c8ce5&_render=rss]
name = David Rupp
filter = (clojure|\(def |\(defn-? )

# https://medium.com/@mhjort/
[https://pipes.yahoo.com/pipes/pipe.run?_id=2609e103b89426e45471d84acd0653d3&_render=rss]
name = Markus Hjort
filter = (clojure|\(def |\(defn-? )

[http://comp-phil.blogspot.de/feeds/posts/default/-/clojure]
name = Mike Harris

[http://fn-code.blogspot.de/feeds/posts/default/-/clojure]
name = Mark Bastian

[http://www.metasoarous.com/tag/clojure/rss/]
name = Christopher Small

[http://tomassetti.me/category/clojure/feed/]
name = Federico Tomassetti

[https://medium.com/feed/galuhproject-by-froyo]
name = Froyo.co.id

[http://clojurecode.asep.co/feed/rss.xml]
name = Asep Bagja Priandana

[http://clojurist.blogspot.com/feeds/posts/default]
name = Naren Arya

[http://fdatamining.blogspot.hk/feeds/posts/default/-/clojure]
name = "F# and Data Mining"

# http://kartar.net/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f1842f5154ebc1e47e6ee2863f0f855b&_render=rss]
name = James Turnbull
filter = (clojure|\(def |\(defn-? )

[http://inside.unbounce.com/tag/clojure/feed/]
name = Inside Unbounce

[https://dataissexy.wordpress.com/feed/]
name = Jason Bell
filter = (clojure|\(def |\(defn-? )

[http://hackaday.com/tag/clojure/feed/]
name = Hackaday

[http://blog.tarkalabs.com/tag/clojure/feed/]
name = τarka λabs

# Not sure about it...
# http://www.smashcompany.com/
#[http://pipes.yahoo.com/pipes/pipe.run?_id=70a98ab9af7af2c876d454f8605ffea4&_render=rss]
#name = Smash Company
#filter = (clojure|\(def |\(defn-? )

# http://swiftkey.com/en/blog/
[http://pipes.yahoo.com/pipes/pipe.run?_id=a5ac75018bf3137b420b970fe9ec3e55&_render=rss]
name = SwiftKey
filter = (clojure|\(def |\(defn-? )

# Sunil Mishra
[http://blog.sfmishras.com/feeds/posts/default/-/clojure]
name = Sunil Mishra

[http://clojurescriptmadeeasy.com/feed.xml]
name = Clojurescript Made Easy

[http://glennengstrand.info/blog/?tag=clojure&feed=rss2]
name = Glenn Engstrand

[http://danielcompton.net/tagged-clojure.xml]
name = Daniel Compton

# http://blog.avisi.nl/
[https://pipes.yahoo.com/pipes/pipe.run?_id=8a5e041b6d56a49d30d2d7f12e420c09&_render=rss]
name = Avisi
filter = (clojure|\(def |\(defn-? )

# http://torsten.io
[https://pipes.yahoo.com/pipes/pipe.run?_id=1a07b0a4fcac1bd1166964ed2a750b42&_render=rss]
name = Torsten Becker
filter = (clojure|\(def |\(defn-? )

# http://sonian.com/sonian-blog/
[https://pipes.yahoo.com/pipes/pipe.run?_id=d508a4f6696c88ad4164d8d472e885be&_render=rss]
name = Sonian
filter = (clojure|\(def |\(defn-? )

[http://clojureforscience.novonon.com/?feed=rss2]
name = Clojure: For Science!

# https://adamclements.github.io/
[https://pipes.yahoo.com/pipes/pipe.run?_id=67ee2851ff91d98cb3f56517c26cfaa7&_render=rss]
name = Adam Clements
filter = (clojure|\(def |\(defn-? )

[http://pinterface.livejournal.com/data/atom?tag=clojure]
name = pinterface

[http://moduslaborandi.net/tag/clojure/feed/]
name = Modus laborandi

[https://nervous.io/feed.clojure.xml]
name = Nervous Systems

[http://mneise.github.io/feed.xml]
name = Maria Geller

# http://uydurmalar.blogspot.de
[https://pipes.yahoo.com/pipes/pipe.run?_id=e61b3b255f6267decafda35b9f790bf8&_render=rss]
name = Can Candan
filter = (clojure|\(def |\(defn-? )

[http://tumblebolt.com/clojure.xml]
name = sabraham

[http://christopherdbui.com/category/clojure/feed/]
name = Chris Bui

[http://theburningmonk.com/topics/programming/clojure/feed/]
name = Yan Cui

# http://blog.sparrho.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=2a4aed15e4d5dc1dce6366fd605079ff&_render=rss]
name = Sparrho
filter = (clojure|\(def |\(defn-? )

[http://brownsofa.org/blog/categories/clojure/atom.xml]
name = Ian Truslove

[https://semaphoreci.com/community/tags/clojure.atom]
name = Semaphore CI

[http://engineering.mayvenn.com/feed.xml]
name = Mayvenn Engineering blog

# http://homegrown.io/articles/
[http://pipes.yahoo.com/pipes/pipe.run?_id=e378b6ce6d61093f9edf8e60703e7bfe&_render=rss]
name = Homegrown Labs
filter = (clojure|\(def |\(defn-? )

[http://damionjunk.com/tags/clojure/index.xml]
name = Damion Junk

# http://deraen.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=c52b6e95e390ad5c8dc91d298564e309&_render=rss]
name = Juho Teperi
filter = (clojure|\(def |\(defn-? )

[http://turkia.github.io/feed.xml]
name = Mika Turkia

[http://jamiei.com/blog/topic/development/clojure/feed/]
name = Jamie Ingilby

# https://blog.giantswarm.io
[http://pipes.yahoo.com/pipes/pipe.run?_id=895fb5ffd9be58e784363aefe656d5f7&_render=rss]
name = The Giant Swarm Blog
filter = (clojure|\(def |\(defn-? )

# https://judithmassa.wordpress.com/
[http://pipes.yahoo.com/pipes/pipe.run?_id=f7f101289ee7a2d3ce6842d586da39b9&_render=rss]
name = Rubberducking 
filter = (clojure|\(def |\(defn-? )

# http://tahmid.me/feed.xml
[http://pipes.yahoo.com/pipes/pipe.run?_id=730dbf78b7faea29eb776b8abf1408a3&_render=rss]
name = Tahmid Sadik
filter = (clojure|\(def |\(defn-? )

[http://blog.cfelde.com/tag/clojurescript/feed/]
name = Christian Felde

# http://leonid.shevtsov.me
[http://pipes.yahoo.com/pipes/pipe.run?_id=9ab696a76ececb15db29fb209649820a&_render=rss]
name = Leonid Shevtsov
filter = (clojure|\(def |\(defn-? )

# https://wildermuthn.github.io/
[http://pipes.yahoo.com/pipes/pipe.run?_id=6cd664f8a0816a65c355f45ba21e72bd&_render=rss]
name = Nate Wildermuth
filter = (clojure|\(def |\(defn-? )

# https://aws.amazon.com/blogs/compute/
[http://pipes.yahoo.com/pipes/pipe.run?_id=041654a90f75901238baccd2b9de5d10&_render=rss]
name = AWS Compute Blog
filter = (clojure|\(def |\(defn-? )

[http://controlroom.blogspot.de/feeds/posts/default/-/clojure]
name = Kirby Urner

[http://jstaffans.github.io/feed_clojure.xml]
name = Johannes Staffans

[http://www.afronski.pl/tag/clojure/feed.xml]
name = Wojciech Gawroński

# https://medium.com/@donbonifacio
[http://pipes.yahoo.com/pipes/pipe.run?_id=474cfb4c84aea9a4bd5a164802669954&_render=rss]
name = Pedro Pereira Santos
filter = (clojure|\(def |\(defn-? )

[https://carouselapps.com/tag/clojure/feed/]
name = Carousel Apps

# http://owenrh.me.uk/
[http://pipes.yahoo.com/pipes/pipe.run?_id=3e51af0abea2075db4f3c1b5ffaddf7d&_render=rss]
name = Owen Rees-Hayward
filter = (clojure|\(def |\(defn-? )

[http://camdez.com/blog/categories/clojure/atom.xml]
name = Cameron Desautels

[http://blog.nberger.com.ar/blog/categories/clojure/atom.xml]
name = Nicolás Berger

[http://www.quentinthomas.com/automated-solutions-blog/?tag=Clojure&format=RSS]
name = Automated Solutions

[http://ruedigergad.com/tag/clojure/feed/]
name = Ruediger Gad

[http://elegoff.blogspot.com/feeds/posts/default/-/clojure]
name = Eric Le Goff

[http://blog.cognitect.com/blog?format=rss&tag=Clojure]
name = Cognitect

[https://blog.project-fifo.net/tag/clojure/feed/]
name = Project-FiFo

[http://decomplecting.org/feed/index.xml]
name = Jason Lewis
filter = (clojure|\(def |\(defn-? )

# https://ezhillang.wordpress.com/2015/01/31/clojure-thamil-and-privilege-of-programming-in-english/
# TODO: http://amitksaha.wordpress.com/
# TODO: http://blog.hashobject.com/make-static-site-with-clojure-and-host-on-amazon/
# TODO: http://beandipper.github.io/
# TODO: http://blub.co.za/
# TODO: http://cjohansen.no/building-static-sites-in-clojure-with-stasis
# TODO: https://www.airpair.com/clojure/posts/using-apache-spark-clojure
# TODO: https://medium.com/this-is-not-a-monad-tutorial/how-to-earn-your-clojure-white-belt-7e7db68a71e5

# http://paul.henrich.me/posts/2015/01/clojure-koan-to-kata.html
# http://www.stuartmitchell.com/journal/2015/3/17/caching-in-transit-cljs.html

# TODO:
# http://www.niwi.be/2015/03/28/promises-and-clojurescript/
# http://endlessparentheses.com/cider-debug-a-visual-interactive-debugger-for-clojure.html
# http://oobaloo.co.uk/multiplexing-work-reliably-and-efficiently-with-state-machines-and-core-dot-async
# http://blog.scalac.io/2015/04/02/clojurescript-reactjs-reagent.html - asked for feed
# https://medium.com/@KamilLelonek/

# http://tahmid.me/index.html -> wrote
